{"remainingRequest":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\node_modules\\babel-loader\\lib\\index.js??ref--6-1!C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\src\\core_plugins\\vega\\public\\data_model\\ems_file_parser.js","dependencies":[{"path":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\src\\core_plugins\\vega\\public\\data_model\\ems_file_parser.js","mtime":1525446285211},{"path":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1493198456000},{"path":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\node_modules\\babel-loader\\lib\\index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EmsFileParser = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _vega_base_view = require('../vega_view/vega_base_view');\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * This class processes all Vega spec customizations,\n * converting url object parameters into query results.\n */\nvar EmsFileParser = exports.EmsFileParser = function () {\n  function EmsFileParser(serviceSettings) {\n    _classCallCheck(this, EmsFileParser);\n\n    this._serviceSettings = serviceSettings;\n  }\n\n  // noinspection JSMethodCanBeStatic\n  /**\n   * Update request object, expanding any context-aware keywords\n   */\n\n\n  _createClass(EmsFileParser, [{\n    key: 'parseUrl',\n    value: function parseUrl(obj, url) {\n      if (typeof url.name !== 'string') {\n        throw new Error('data.url with {\"%type%\": \"emsfile\"} is missing the \"name\" of the file');\n      }\n      // Optimization: so initiate remote request as early as we know that we will need it\n      if (!this._fileLayersP) {\n        this._fileLayersP = this._serviceSettings.getFileLayers();\n      }\n      return { obj: obj, name: url.name };\n    }\n\n    /**\n     * Process items generated by parseUrl()\n     * @param {object[]} requests each object is generated by parseUrl()\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: 'populateData',\n    value: function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(requests) {\n        var layers, _loop, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _ref2;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(requests.length === 0)) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt('return');\n\n              case 2:\n                _context.next = 4;\n                return this._fileLayersP;\n\n              case 4:\n                layers = _context.sent;\n\n                _loop = function _loop(_ref2) {\n                  var obj = _ref2.obj,\n                      name = _ref2.name;\n\n                  var foundLayer = layers.find(function (v) {\n                    return v.name === name;\n                  });\n                  if (!foundLayer) {\n                    throw new Error('emsfile ' + JSON.stringify(name) + ' does not exist');\n                  }\n\n                  // This URL can bypass loader sanitization at the later stage\n                  obj.url = (0, _vega_base_view.bypassExternalUrlCheck)(foundLayer.url);\n                };\n\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _iteratorError = undefined;\n                _context.prev = 9;\n\n\n                for (_iterator = requests[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  _ref2 = _step.value;\n\n                  _loop(_ref2);\n                }\n                _context.next = 17;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context['catch'](9);\n                _didIteratorError = true;\n                _iteratorError = _context.t0;\n\n              case 17:\n                _context.prev = 17;\n                _context.prev = 18;\n\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                  _iterator.return();\n                }\n\n              case 20:\n                _context.prev = 20;\n\n                if (!_didIteratorError) {\n                  _context.next = 23;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 23:\n                return _context.finish(20);\n\n              case 24:\n                return _context.finish(17);\n\n              case 25:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[9, 13, 17, 25], [18,, 20, 24]]);\n      }));\n\n      function populateData(_x) {\n        return _ref.apply(this, arguments);\n      }\n\n      return populateData;\n    }()\n  }]);\n\n  return EmsFileParser;\n}();",null]}