{"remainingRequest":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\node_modules\\babel-loader\\lib\\index.js??ref--6-1!C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\src\\core_plugins\\console\\public\\tests\\src\\curl_parsing_tests.js","dependencies":[{"path":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\src\\core_plugins\\console\\public\\tests\\src\\curl_parsing_tests.js","mtime":1525446212009},{"path":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1493198456000},{"path":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\node_modules\\babel-loader\\lib\\index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nvar _ = require('lodash');\nvar curl = require('../../src/curl');\nvar curlTests = require('raw-loader!./curl_parsing_tests.txt');\n\nvar _window$QUnit = window.QUnit,\n    test = _window$QUnit.test,\n    _module = _window$QUnit.module,\n    ok = _window$QUnit.ok,\n    equal = _window$QUnit.equal;\n\n\n_module(\"CURL\");\n\nvar notCURLS = ['sldhfsljfhs', 's;kdjfsldkfj curl -XDELETE \"\"', '{ \"hello\": 1 }'];\n\n_.each(notCURLS, function (notCURL, i) {\n  test(\"cURL Detection - broken strings \" + i, function () {\n    ok(!curl.detectCURL(notCURL), \"marked as curl while it wasn't:\" + notCURL);\n  });\n});\n\n_.each(curlTests.split(/^=+$/m), function (fixture) {\n  if (fixture.trim() == \"\") {\n    return;\n  }\n  fixture = fixture.split(/^-+$/m);\n  var name = fixture[0].trim(),\n      curlText = fixture[1],\n      response = fixture[2].trim();\n\n  test(\"cURL Detection - \" + name, function () {\n    ok(curl.detectCURL(curlText), \"marked as not curl while it was:\" + curlText);\n    var r = curl.parseCURL(curlText);\n    equal(r, response);\n  });\n});",null]}