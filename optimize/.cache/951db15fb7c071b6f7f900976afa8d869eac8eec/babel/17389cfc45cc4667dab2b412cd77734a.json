{"remainingRequest":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\node_modules\\babel-loader\\lib\\index.js??ref--6-1!C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\src\\utils\\streams\\list_stream.js","dependencies":[{"path":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\src\\utils\\streams\\list_stream.js","mtime":1525446444578},{"path":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1493198456000},{"path":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\node_modules\\babel-loader\\lib\\index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createListStream = createListStream;\n\nvar _stream = require('stream');\n\n/**\n *  Create a Readable stream that provides the items\n *  from a list as objects to subscribers\n *\n *  @param  {Array<any>} items - the list of items to provide\n *  @return {Readable}\n */\nfunction createListStream() {\n  var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  var queue = [].concat(items);\n\n  return new _stream.Readable({\n    objectMode: true,\n    read: function read(size) {\n      var _this = this;\n\n      queue.splice(0, size).forEach(function (item) {\n        _this.push(item);\n      });\n\n      if (!queue.length) {\n        this.push(null);\n      }\n    }\n  });\n}",null]}