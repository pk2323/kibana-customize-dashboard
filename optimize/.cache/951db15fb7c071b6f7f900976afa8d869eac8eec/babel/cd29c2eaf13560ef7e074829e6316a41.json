{"remainingRequest":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\node_modules\\babel-loader\\lib\\index.js??ref--6-1!C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\src\\core_plugins\\vega\\public\\data_model\\utils.js","dependencies":[{"path":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\src\\core_plugins\\vega\\public\\data_model\\utils.js","mtime":1525446285405},{"path":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1493198456000},{"path":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\node_modules\\babel-loader\\lib\\index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Utils = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _jsonStringifyPrettyCompact = require('json-stringify-pretty-compact');\n\nvar _jsonStringifyPrettyCompact2 = _interopRequireDefault(_jsonStringifyPrettyCompact);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Utils = exports.Utils = function () {\n  function Utils() {\n    _classCallCheck(this, Utils);\n  }\n\n  _createClass(Utils, null, [{\n    key: 'formatWarningToStr',\n\n\n    /**\n     * If the 2nd array parameter in args exists, append it to the warning/error string value\n     */\n    value: function formatWarningToStr(value) {\n      if (arguments.length >= 2) {\n        try {\n          if (typeof arguments[1] === 'string') {\n            value += '\\n' + arguments[1];\n          } else {\n            value += '\\n' + (0, _jsonStringifyPrettyCompact2.default)(arguments[1], { maxLength: 70 });\n          }\n        } catch (err) {\n          // ignore\n        }\n      }\n      return value;\n    }\n  }, {\n    key: 'formatErrorToStr',\n    value: function formatErrorToStr(error) {\n      if (!error) {\n        error = 'ERR';\n      } else if (error instanceof Error) {\n        error = error.message;\n      }\n      return Utils.formatWarningToStr.apply(Utils, [error].concat(_toConsumableArray(Array.from(arguments).slice(1))));\n    }\n  }]);\n\n  return Utils;\n}();",null]}