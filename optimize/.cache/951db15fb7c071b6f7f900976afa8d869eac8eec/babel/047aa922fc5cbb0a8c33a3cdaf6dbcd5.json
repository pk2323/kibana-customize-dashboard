{"remainingRequest":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\node_modules\\babel-loader\\lib\\index.js??ref--6-1!C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\src\\core_plugins\\kibana\\common\\tutorials\\instruction_variant.js","dependencies":[{"path":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\src\\core_plugins\\kibana\\common\\tutorials\\instruction_variant.js","mtime":1525446223530},{"path":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1493198456000},{"path":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\node_modules\\babel-loader\\lib\\index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _DISPLAY_MAP;\n\nexports.getDisplayText = getDisplayText;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar INSTRUCTION_VARIANT = exports.INSTRUCTION_VARIANT = {\n  OSX: 'osx',\n  DEB: 'deb',\n  RPM: 'rpm',\n  DOCKER: 'docker',\n  WINDOWS: 'windows',\n  NODE: 'node',\n  DJANGO: 'django',\n  FLASK: 'flask',\n  RAILS: 'rails',\n  RACK: 'rack',\n  JS: 'js'\n};\n\nvar DISPLAY_MAP = (_DISPLAY_MAP = {}, _defineProperty(_DISPLAY_MAP, INSTRUCTION_VARIANT.OSX, 'macOS'), _defineProperty(_DISPLAY_MAP, INSTRUCTION_VARIANT.DEB, 'DEB'), _defineProperty(_DISPLAY_MAP, INSTRUCTION_VARIANT.RPM, 'RPM'), _defineProperty(_DISPLAY_MAP, INSTRUCTION_VARIANT.DOCKER, 'Docker'), _defineProperty(_DISPLAY_MAP, INSTRUCTION_VARIANT.WINDOWS, 'Windows'), _defineProperty(_DISPLAY_MAP, INSTRUCTION_VARIANT.NODE, 'Node.js'), _defineProperty(_DISPLAY_MAP, INSTRUCTION_VARIANT.DJANGO, 'Django'), _defineProperty(_DISPLAY_MAP, INSTRUCTION_VARIANT.FLASK, 'Flask'), _defineProperty(_DISPLAY_MAP, INSTRUCTION_VARIANT.RAILS, 'Ruby on Rails'), _defineProperty(_DISPLAY_MAP, INSTRUCTION_VARIANT.RACK, 'Rack'), _defineProperty(_DISPLAY_MAP, INSTRUCTION_VARIANT.JS, 'JS'), _DISPLAY_MAP);\n\n/**\n * Convert instruction variant id into display text.\n *\n * @params {String} id - instruction variant id as defined from INSTRUCTION_VARIANT\n * @return {String} display name\n */\nfunction getDisplayText(id) {\n  if (id in DISPLAY_MAP) {\n    return DISPLAY_MAP[id];\n  }\n  return id;\n}",null]}