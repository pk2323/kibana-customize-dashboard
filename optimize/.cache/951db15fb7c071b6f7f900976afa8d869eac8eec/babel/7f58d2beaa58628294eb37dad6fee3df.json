{"remainingRequest":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\node_modules\\babel-loader\\lib\\index.js??ref--6-1!C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\src\\ui\\public\\utils\\sort_prefix_first.js","dependencies":[{"path":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\src\\ui\\public\\utils\\sort_prefix_first.js","mtime":1525446429904},{"path":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1493198456000},{"path":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\node_modules\\babel-loader\\lib\\index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sortPrefixFirst = sortPrefixFirst;\n\nvar _lodash = require('lodash');\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction sortPrefixFirst(array, prefix, property) {\n  if (!prefix) return array;\n  var lowerCasePrefix = ('' + prefix).toLowerCase();\n\n  var partitions = (0, _lodash.partition)(array, function (entry) {\n    var value = ('' + (property ? entry[property] : entry)).toLowerCase();\n    return value.startsWith(lowerCasePrefix);\n  });\n  return [].concat(_toConsumableArray(partitions[0]), _toConsumableArray(partitions[1]));\n}",null]}