{"remainingRequest":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\node_modules\\babel-loader\\lib\\index.js??ref--6-1!C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\src\\core_plugins\\kibana\\public\\visualize\\embeddable\\visualize_embeddable_factory.js","dependencies":[{"path":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\src\\core_plugins\\kibana\\public\\visualize\\embeddable\\visualize_embeddable_factory.js","mtime":1525446241854},{"path":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1493198456000},{"path":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\node_modules\\babel-loader\\lib\\index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VisualizeEmbeddableFactory = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _loader = require('ui/visualize/loader');\n\nvar _brush_event = require('ui/utils/brush_event');\n\nvar _filter_bar_click_handler = require('ui/filter_bar/filter_bar_click_handler');\n\nvar _embeddable = require('ui/embeddable');\n\nvar _persisted_state = require('ui/persisted_state');\n\nvar _visualize_lab_disabled = require('./visualize_lab_disabled.html');\n\nvar _visualize_lab_disabled2 = _interopRequireDefault(_visualize_lab_disabled);\n\nvar _chrome = require('ui/chrome');\n\nvar _chrome2 = _interopRequireDefault(_chrome);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar VisualizeEmbeddableFactory = exports.VisualizeEmbeddableFactory = function (_EmbeddableFactory) {\n  _inherits(VisualizeEmbeddableFactory, _EmbeddableFactory);\n\n  function VisualizeEmbeddableFactory(savedVisualizations, timefilter, Notifier, Promise, Private, config) {\n    _classCallCheck(this, VisualizeEmbeddableFactory);\n\n    var _this = _possibleConstructorReturn(this, (VisualizeEmbeddableFactory.__proto__ || Object.getPrototypeOf(VisualizeEmbeddableFactory)).call(this));\n\n    _this._config = config;\n    _this.savedVisualizations = savedVisualizations;\n    _this.name = 'visualization';\n    _this.Promise = Promise;\n    _this.brushEvent = (0, _brush_event.UtilsBrushEventProvider)(timefilter);\n    _this.filterBarClickHandler = (0, _filter_bar_click_handler.FilterBarClickHandlerProvider)(Notifier, Private);\n    return _this;\n  }\n\n  _createClass(VisualizeEmbeddableFactory, [{\n    key: 'getEditPath',\n    value: function getEditPath(panelId) {\n      return this.savedVisualizations.urlFor(panelId);\n    }\n  }, {\n    key: 'render',\n    value: function render(domNode, panel, container) {\n      var _this2 = this;\n\n      var editUrl = this.getEditPath(panel.id);\n\n      var waitFor = [(0, _loader.getVisualizeLoader)(), this.savedVisualizations.get(panel.id)];\n      return this.Promise.all(waitFor).then(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            loader = _ref2[0],\n            savedObject = _ref2[1];\n\n        var isLabsEnabled = _this2._config.get('visualize:enableLabs');\n\n        if (!isLabsEnabled && savedObject.vis.type.stage === 'lab') {\n          var template = (0, _jquery2.default)(_visualize_lab_disabled2.default);\n          template.find('.disabledLabVisualization__title').text(savedObject.title);\n          (0, _jquery2.default)(domNode).html(template);\n\n          return new _embeddable.Embeddable({\n            title: savedObject.title\n          });\n        }\n\n        var panelTitle = void 0;\n        if (!container.getHidePanelTitles()) {\n          panelTitle = panel.title !== undefined ? panel.title : savedObject.title;\n        }\n\n        var parsedUiState = savedObject.uiStateJSON ? JSON.parse(savedObject.uiStateJSON) : {};\n        var uiState = new _persisted_state.PersistedState(_extends({}, parsedUiState, panel.embeddableConfig));\n        var uiStateChangeHandler = function uiStateChangeHandler() {\n          panel = container.updatePanel(panel.panelIndex, { embeddableConfig: uiState.toJSON() });\n        };\n        uiState.on('change', uiStateChangeHandler);\n\n        savedObject.vis.listeners.click = _this2.filterBarClickHandler(container.getAppState());\n        savedObject.vis.listeners.brush = _this2.brushEvent(container.getAppState());\n\n        container.registerPanelIndexPattern(panel.panelIndex, savedObject.vis.indexPattern);\n\n        var handler = loader.embedVisualizationWithSavedObject(domNode, savedObject, {\n          uiState: uiState,\n          // Append visualization to container instead of replacing its content\n          append: true,\n          cssClass: 'panel-content panel-content--fullWidth',\n          // The chrome is permanently hidden in \"embed mode\" in which case we don't want to show the spy pane, since\n          // we deem that situation to be more public facing and want to hide more detailed information.\n          showSpyPanel: !_chrome2.default.getIsChromePermanentlyHidden(),\n          dataAttrs: {\n            'shared-item': '',\n            title: panelTitle,\n            description: savedObject.description\n          }\n        });\n\n        _this2.addDestroyEmeddable(panel.panelIndex, function () {\n          uiState.off('change', uiStateChangeHandler);\n          handler.getElement().remove();\n          savedObject.destroy();\n          handler.destroy();\n        });\n\n        return new _embeddable.Embeddable({\n          title: savedObject.title,\n          editUrl: editUrl\n        });\n      });\n    }\n  }]);\n\n  return VisualizeEmbeddableFactory;\n}(_embeddable.EmbeddableFactory);",null]}