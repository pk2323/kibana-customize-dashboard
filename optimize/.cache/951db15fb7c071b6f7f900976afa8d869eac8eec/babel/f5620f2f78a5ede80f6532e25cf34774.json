{"remainingRequest":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\node_modules\\babel-loader\\lib\\index.js??ref--6-1!C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\src\\core_plugins\\kibana\\public\\management\\sections\\indices\\create_index_pattern_wizard\\components\\step_index_pattern\\step_index_pattern.js","dependencies":[{"path":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\src\\core_plugins\\kibana\\public\\management\\sections\\indices\\create_index_pattern_wizard\\components\\step_index_pattern\\step_index_pattern.js","mtime":1525446236397},{"path":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1493198456000},{"path":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\node_modules\\babel-loader\\lib\\index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StepIndexPattern = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _constants = require('../../constants');\n\nvar _lib = require('../../lib');\n\nvar _loading_indices = require('./components/loading_indices');\n\nvar _status_message = require('./components/status_message');\n\nvar _indices_list = require('./components/indices_list');\n\nvar _header = require('./components/header');\n\nvar _eui = require('@elastic/eui');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar StepIndexPattern = exports.StepIndexPattern = function (_Component) {\n  _inherits(StepIndexPattern, _Component);\n\n  function StepIndexPattern(props) {\n    var _this2 = this;\n\n    _classCallCheck(this, StepIndexPattern);\n\n    var _this = _possibleConstructorReturn(this, (StepIndexPattern.__proto__ || Object.getPrototypeOf(StepIndexPattern)).call(this, props));\n\n    _this.fetchIndices = function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(query) {\n        var esService, exactMatchedIndices, partialMatchedIndices, _exactMatchedIndices;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                esService = _this.props.esService;\n\n\n                _this.setState({ isLoadingIndices: true, indexPatternExists: false });\n\n                if (!query.endsWith('*')) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 5;\n                return (0, _lib.getIndices)(esService, query, _constants.MAX_SEARCH_SIZE);\n\n              case 5:\n                exactMatchedIndices = _context.sent;\n\n                (0, _lib.createReasonableWait)(function () {\n                  // If the search changed, discard this state\n                  if (query !== _this.lastQuery) {\n                    return;\n                  }\n                  _this.setState({ exactMatchedIndices: exactMatchedIndices, isLoadingIndices: false });\n                });\n                _context.next = 16;\n                break;\n\n              case 9:\n                _context.next = 11;\n                return (0, _lib.getIndices)(esService, query + '*', _constants.MAX_SEARCH_SIZE);\n\n              case 11:\n                partialMatchedIndices = _context.sent;\n                _context.next = 14;\n                return (0, _lib.getIndices)(esService, query, _constants.MAX_SEARCH_SIZE);\n\n              case 14:\n                _exactMatchedIndices = _context.sent;\n\n                (0, _lib.createReasonableWait)(function () {\n                  // If the search changed, discard this state\n                  if (query !== _this.lastQuery) {\n                    return;\n                  }\n\n                  _this.setState({\n                    partialMatchedIndices: partialMatchedIndices,\n                    exactMatchedIndices: _exactMatchedIndices,\n                    isLoadingIndices: false\n                  });\n                });\n\n              case 16:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, _this2);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.onQueryChanged = function (e) {\n      var appendedWildcard = _this.state.appendedWildcard;\n      var target = e.target;\n\n\n      var query = target.value;\n      if (query.length === 1 && (0, _lib.canAppendWildcard)(query)) {\n        query += '*';\n        _this.setState({ appendedWildcard: true });\n        setTimeout(function () {\n          return target.setSelectionRange(1, 1);\n        });\n      } else {\n        if (query === '*' && appendedWildcard) {\n          query = '';\n          _this.setState({ appendedWildcard: false });\n        }\n      }\n\n      _this.lastQuery = query;\n      _this.setState({ query: query, showingIndexPatternQueryErrors: !!query.length });\n      _this.fetchIndices(query);\n    };\n\n    _this.state = {\n      partialMatchedIndices: [],\n      exactMatchedIndices: [],\n      isLoadingIndices: false,\n      query: props.initialQuery,\n      appendedWildcard: false,\n      showingIndexPatternQueryErrors: false\n    };\n\n    _this.lastQuery = null;\n    return _this;\n  }\n\n  _createClass(StepIndexPattern, [{\n    key: 'componentWillMount',\n    value: function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (this.state.query) {\n                  this.lastQuery = this.state.query;\n                  this.fetchIndices(this.state.query);\n                }\n\n              case 1:\n              case 'end':\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentWillMount() {\n        return _ref2.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: 'renderLoadingState',\n    value: function renderLoadingState() {\n      var isLoadingIndices = this.state.isLoadingIndices;\n\n\n      if (!isLoadingIndices) {\n        return null;\n      }\n\n      return _react2.default.createElement(_loading_indices.LoadingIndices, null);\n    }\n  }, {\n    key: 'renderStatusMessage',\n    value: function renderStatusMessage(matchedIndices) {\n      var _state = this.state,\n          query = _state.query,\n          isLoadingIndices = _state.isLoadingIndices;\n\n\n      if (isLoadingIndices) {\n        return null;\n      }\n\n      return _react2.default.createElement(_status_message.StatusMessage, {\n        matchedIndices: matchedIndices,\n        query: query\n      });\n    }\n  }, {\n    key: 'renderList',\n    value: function renderList(_ref3) {\n      var visibleIndices = _ref3.visibleIndices,\n          allIndices = _ref3.allIndices;\n      var _state2 = this.state,\n          query = _state2.query,\n          isLoadingIndices = _state2.isLoadingIndices;\n\n\n      if (isLoadingIndices) {\n        return null;\n      }\n\n      var indicesToList = query.length ? visibleIndices : allIndices;\n\n      return _react2.default.createElement(_indices_list.IndicesList, {\n        indices: indicesToList\n      });\n    }\n  }, {\n    key: 'renderHeader',\n    value: function renderHeader(_ref4) {\n      var indices = _ref4.exactMatchedIndices;\n      var goToNextStep = this.props.goToNextStep;\n      var _state3 = this.state,\n          query = _state3.query,\n          showingIndexPatternQueryErrors = _state3.showingIndexPatternQueryErrors;\n\n\n      var containsErrors = false;\n      var errors = [];\n      var characterList = _constants.ILLEGAL_CHARACTERS.slice(0, _constants.ILLEGAL_CHARACTERS.length - 1).join(', ');\n\n      if (!(0, _lib.isIndexPatternQueryValid)(query, _constants.ILLEGAL_CHARACTERS)) {\n        errors.push('Your input contains invalid characters or spaces. Please omit: ' + characterList);\n        containsErrors = true;\n      }\n\n      var isInputInvalid = showingIndexPatternQueryErrors && containsErrors;\n      var isNextStepDisabled = containsErrors || indices.length === 0;\n\n      return _react2.default.createElement(_header.Header, {\n        isInputInvalid: isInputInvalid,\n        errors: errors,\n        characterList: characterList,\n        query: query,\n        onQueryChanged: this.onQueryChanged,\n        goToNextStep: goToNextStep,\n        isNextStepDisabled: isNextStepDisabled\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          isIncludingSystemIndices = _props.isIncludingSystemIndices,\n          allIndices = _props.allIndices;\n      var _state4 = this.state,\n          query = _state4.query,\n          partialMatchedIndices = _state4.partialMatchedIndices,\n          exactMatchedIndices = _state4.exactMatchedIndices;\n\n\n      var matchedIndices = (0, _lib.getMatchedIndices)(allIndices, partialMatchedIndices, exactMatchedIndices, query, isIncludingSystemIndices);\n\n      return _react2.default.createElement(\n        _eui.EuiPanel,\n        { paddingSize: 'l' },\n        this.renderHeader(matchedIndices),\n        _react2.default.createElement(_eui.EuiSpacer, { size: 's' }),\n        this.renderLoadingState(matchedIndices),\n        this.renderStatusMessage(matchedIndices),\n        _react2.default.createElement(_eui.EuiSpacer, { size: 's' }),\n        this.renderList(matchedIndices)\n      );\n    }\n  }]);\n\n  return StepIndexPattern;\n}(_react.Component);\n\nStepIndexPattern.propTypes = {\n  allIndices: _propTypes2.default.array.isRequired,\n  isIncludingSystemIndices: _propTypes2.default.bool.isRequired,\n  esService: _propTypes2.default.object.isRequired,\n  goToNextStep: _propTypes2.default.func.isRequired,\n  initialQuery: _propTypes2.default.string\n};\nStepIndexPattern.defaultProps = {\n  initialQuery: ''\n};",null]}