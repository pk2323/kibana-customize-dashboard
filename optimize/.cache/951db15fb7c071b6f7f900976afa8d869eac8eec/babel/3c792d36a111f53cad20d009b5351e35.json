{"remainingRequest":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\node_modules\\babel-loader\\lib\\index.js??ref--6-1!C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\src\\ui\\public\\render_complete\\directive.js","dependencies":[{"path":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\src\\ui\\public\\render_complete\\directive.js","mtime":1525446419536},{"path":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1493198456000},{"path":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\node_modules\\babel-loader\\lib\\index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nvar _modules = require('ui/modules');\n\nvar attributeName = 'data-render-complete';\n\n_modules.uiModules.get('kibana').directive('renderComplete', function () {\n  return {\n    controller: function controller($scope, $element) {\n      var el = $element[0];\n\n      var start = function start() {\n        $element.attr(attributeName, false);\n        return true;\n      };\n\n      var complete = function complete() {\n        $element.attr(attributeName, true);\n        return true;\n      };\n\n      var teardown = function teardown() {\n        el.removeEventListener('renderStart', start);\n        el.removeEventListener('renderComplete', complete);\n      };\n\n      var setup = function setup() {\n        $element.attr(attributeName, false);\n        el.addEventListener('renderStart', start);\n        el.addEventListener('renderComplete', complete);\n        $scope.$on('$destroy', teardown);\n      };\n\n      this.disable = function () {\n        $element.attr(attributeName, 'disabled');\n        teardown();\n      };\n\n      setup();\n    }\n  };\n});",null]}