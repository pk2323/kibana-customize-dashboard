{"remainingRequest":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\node_modules\\babel-loader\\lib\\index.js??ref--6-1!C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\src\\core_plugins\\vega\\public\\vega_view\\vega_view.js","dependencies":[{"path":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\src\\core_plugins\\vega\\public\\vega_view\\vega_view.js","mtime":1525446285974},{"path":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1493198456000},{"path":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\node_modules\\babel-loader\\lib\\index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VegaView = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _vegaLib = require('vega-lib');\n\nvar vega = _interopRequireWildcard(_vegaLib);\n\nvar _vega_base_view = require('./vega_base_view');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar VegaView = exports.VegaView = function (_VegaBaseView) {\n  _inherits(VegaView, _VegaBaseView);\n\n  function VegaView() {\n    _classCallCheck(this, VegaView);\n\n    return _possibleConstructorReturn(this, (VegaView.__proto__ || Object.getPrototypeOf(VegaView)).apply(this, arguments));\n  }\n\n  _createClass(VegaView, [{\n    key: '_initViewCustomizations',\n    value: function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var view;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this._$container) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt('return');\n\n              case 2:\n                view = new vega.View(vega.parse(this._parser.spec), this._vegaViewConfig);\n\n                this.setDebugValues(view, this._parser.spec, this._parser.vlspec);\n\n                view.warn = this.onWarn.bind(this);\n                view.error = this.onError.bind(this);\n                if (this._parser.useResize) this.updateVegaSize(view);\n                view.initialize(this._$container.get(0), this._$controls.get(0));\n\n                if (this._parser.useHover) view.hover();\n\n                this._addDestroyHandler(function () {\n                  _this2._view = null;\n                  view.finalize();\n                });\n\n                _context.next = 12;\n                return view.runAsync();\n\n              case 12:\n                this._view = view;\n\n              case 13:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function _initViewCustomizations() {\n        return _ref.apply(this, arguments);\n      }\n\n      return _initViewCustomizations;\n    }()\n  }]);\n\n  return VegaView;\n}(_vega_base_view.VegaBaseView);",null]}