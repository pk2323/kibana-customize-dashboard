{"remainingRequest":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\node_modules\\babel-loader\\lib\\index.js??ref--6-1!C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\src\\ui\\public\\debounce\\debounce.js","dependencies":[{"path":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\src\\ui\\public\\debounce\\debounce.js","mtime":1525446335874},{"path":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1493198456000},{"path":"C:\\Users\\Prashanth\\Desktop\\ELk\\kibana-6.2.4\\kibana-6.2.4\\node_modules\\babel-loader\\lib\\index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DebounceProvider = DebounceProvider;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _modules = require('ui/modules');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Debounce service, angularized version of lodash debounce\n// borrowed heavily from https://github.com/shahata/angular-debounce\n\nvar _module = _modules.uiModules.get('kibana');\n\n_module.service('debounce', ['$timeout', function ($timeout) {\n  return function (func, wait, options) {\n    var timeout = void 0;\n    var args = void 0;\n    var self = void 0;\n    var result = void 0;\n    options = _lodash2.default.defaults(options || {}, {\n      leading: false,\n      trailing: true,\n      invokeApply: true\n    });\n\n    function debounce() {\n      self = this;\n      args = arguments;\n\n      var later = function later() {\n        timeout = null;\n        if (!options.leading || options.trailing) {\n          result = func.apply(self, args);\n        }\n      };\n\n      var callNow = options.leading && !timeout;\n\n      if (timeout) {\n        $timeout.cancel(timeout);\n      }\n      timeout = $timeout(later, wait, options.invokeApply);\n\n      if (callNow) {\n        result = func.apply(self, args);\n      }\n\n      return result;\n    }\n\n    debounce.cancel = function () {\n      $timeout.cancel(timeout);\n      timeout = null;\n    };\n\n    return debounce;\n  };\n}]);\n\nfunction DebounceProvider(debounce) {\n  return debounce;\n}",null]}