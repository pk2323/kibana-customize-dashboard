webpackJsonp([2],{3114:function(module,exports,__webpack_require__){"use strict";__webpack_require__(14),__webpack_require__(3115),__webpack_require__(236),__webpack_require__(237),__webpack_require__(238),__webpack_require__(171),__webpack_require__(239),__webpack_require__(14).bootstrap()},3115:function(module,exports,__webpack_require__){"use strict";__webpack_require__(3116)},3116:function(module,exports,__webpack_require__){"use strict";__webpack_require__(50);var _module=__webpack_require__(2).get("app/sense");_module.run(function(){_module.setupResizeCheckerForRootEditors=function(){}}),__webpack_require__(14).setRootTemplate(__webpack_require__(3118)).setRootController(function(){window.QUnit=__webpack_require__(3119),__webpack_require__(3120),__webpack_require__(50),QUnit.config.autostart=!1,QUnit.init(),__webpack_require__(3121),__webpack_require__(3122),__webpack_require__(3125),__webpack_require__(3126),__webpack_require__(3127),__webpack_require__(3129),__webpack_require__(3141),__webpack_require__(3142),__webpack_require__(3144),__webpack_require__(3145),__webpack_require__(3146),console.log("all tests loaded"),QUnit.start()})},3118:function(module,exports){module.exports='  <style type="text/css">\n    #editor_container {\n      display: none;\n      position: absolute;\n      top: 20px;\n      bottom: 20px;\n      left: 20px;\n      right: 20px;\n      z-index: 200;\n      border: 1px solid #333;\n    }\n\n    #output_container {\n      display: none;\n      position: absolute;\n      height: 250px;\n      width: 350px;\n      bottom: 20px;\n      right: 20px;\n      z-index: 201;\n      border: 1px solid #333;\n    }\n\n    #editor, #output {\n      height: 100%;\n      width: 100%;\n      position: relative;\n    }\n  </style>\n<div id="qunit"></div>\n<div id="editor_container">\n  <div id="editor"></div>\n</div>\n<div id="output_container">\n  <div id="output"></div>\n</div>\n'},3119:function(module,exports,__webpack_require__){!function(){function Test(settings){extend(this,settings),this.assertions=[],this.testNumber=++Test.count}function done(){config.autorun=!0,config.currentModule&&runLoggingCallbacks("moduleDone",QUnit,{name:config.currentModule,failed:config.moduleStats.bad,passed:config.moduleStats.all-config.moduleStats.bad,total:config.moduleStats.all});var i,key,banner=id("qunit-banner"),tests=id("qunit-tests"),runtime=+new Date-config.started,passed=config.stats.all-config.stats.bad,html=["Tests completed in ",runtime," milliseconds.<br/>","<span class='passed'>",passed,"</span> tests of <span class='total'>",config.stats.all,"</span> passed, <span class='failed'>",config.stats.bad,"</span> failed."].join("");if(banner&&(banner.className=config.stats.bad?"qunit-fail":"qunit-pass"),tests&&(id("qunit-testresult").innerHTML=html),config.altertitle&&"undefined"!=typeof document&&document.title&&(document.title=[config.stats.bad?"✖":"✔",document.title.replace(/^[\u2714\u2716] /i,"")].join(" ")),config.reorder&&defined.sessionStorage&&0===config.stats.bad)for(i=0;i<sessionStorage.length;i++)key=sessionStorage.key(i++),0===key.indexOf("qunit-test-")&&sessionStorage.removeItem(key);window.scrollTo&&window.scrollTo(0,0),runLoggingCallbacks("done",QUnit,{failed:config.stats.bad,passed:passed,total:config.stats.all,runtime:runtime})}function validTest(test){var include,filter=config.filter&&config.filter.toLowerCase(),module=config.module&&config.module.toLowerCase(),fullName=(test.module+": "+test.testName).toLowerCase();return test.callback&&test.callback.validTest===validTest?(delete test.callback.validTest,!0):config.testNumber?test.testNumber===config.testNumber:!(module&&(!test.module||test.module.toLowerCase()!==module))&&(!filter||(include="!"!==filter.charAt(0),include||(filter=filter.slice(1)),-1!==fullName.indexOf(filter)?include:!include))}function extractStacktrace(e,offset){offset=void 0===offset?3:offset;var stack,include,i;if(e.stacktrace)return e.stacktrace.split("\n")[offset+3];if(e.stack){if(stack=e.stack.split("\n"),/^error$/i.test(stack[0])&&stack.shift(),fileName){for(include=[],i=offset;i<stack.length&&-1==stack[i].indexOf(fileName);i++)include.push(stack[i]);if(include.length)return include.join("\n")}return stack[offset]}if(e.sourceURL){if(/qunit.js$/.test(e.sourceURL))return;return e.sourceURL+":"+e.line}}function sourceFromStacktrace(offset){try{throw new Error}catch(e){return extractStacktrace(e,offset)}}function escapeInnerText(s){return s?(s+="",s.replace(/[\&<>]/g,function(s){switch(s){case"&":return"&amp;";case"<":return"&lt;";case">":return"&gt;";default:return s}})):""}function synchronize(callback,last){config.queue.push(callback),config.autorun&&!config.blocking&&process(last)}function process(last){function next(){process(last)}var start=(new Date).getTime();for(config.depth=config.depth?config.depth+1:1;config.queue.length&&!config.blocking;){if(!(!defined.setTimeout||config.updateRate<=0||(new Date).getTime()-start<config.updateRate)){window.setTimeout(next,13);break}config.queue.shift()()}config.depth--,!last||config.blocking||config.queue.length||0!==config.depth||done()}function saveGlobal(){if(config.pollution=[],config.noglobals)for(var key in window)hasOwn.call(window,key)&&!/^qunit-test-output/.test(key)&&config.pollution.push(key)}function checkPollution(name){var newGlobals,deletedGlobals,old=config.pollution;saveGlobal(),newGlobals=diff(config.pollution,old),newGlobals.length>0&&QUnit.pushFailure("Introduced global variable(s): "+newGlobals.join(", ")),deletedGlobals=diff(old,config.pollution),deletedGlobals.length>0&&QUnit.pushFailure("Deleted global variable(s): "+deletedGlobals.join(", "))}function diff(a,b){var i,j,result=a.slice();for(i=0;i<result.length;i++)for(j=0;j<b.length;j++)if(result[i]===b[j]){result.splice(i,1),i--;break}return result}function extend(a,b){for(var prop in b)void 0===b[prop]?delete a[prop]:"constructor"===prop&&a===window||(a[prop]=b[prop]);return a}function addEvent(elem,type,fn){elem.addEventListener?elem.addEventListener(type,fn,!1):elem.attachEvent?elem.attachEvent("on"+type,fn):fn()}function id(name){return!("undefined"==typeof document||!document||!document.getElementById)&&document.getElementById(name)}function registerLoggingCallback(key){return function(callback){config[key].push(callback)}}function runLoggingCallbacks(key,scope,args){var i,callbacks;if(QUnit.hasOwnProperty(key))QUnit[key].call(scope,args);else for(callbacks=config[key],i=0;i<callbacks.length;i++)callbacks[i].call(scope,args)}function inArray(elem,array){if(array.indexOf)return array.indexOf(elem);for(var i=0,length=array.length;i<length;i++)if(array[i]===elem)return i;return-1}var QUnit,config,onErrorFnPrev,testId=0,fileName=(sourceFromStacktrace(0)||"").replace(/(:\d+)+\)?/,"").replace(/.+\//,""),toString=Object.prototype.toString,hasOwn=Object.prototype.hasOwnProperty,Date=window.Date,defined={setTimeout:void 0!==window.setTimeout,sessionStorage:function(){var x="qunit-test-string";try{return sessionStorage.setItem(x,x),sessionStorage.removeItem(x),!0}catch(e){return!1}}()};Test.count=0,Test.prototype={init:function(){var a,b,li,tests=id("qunit-tests");tests&&(b=document.createElement("strong"),b.innerHTML=this.name,a=document.createElement("a"),a.innerHTML="Rerun",a.href=QUnit.url({testNumber:this.testNumber}),li=document.createElement("li"),li.appendChild(b),li.appendChild(a),li.className="running",li.id=this.id="qunit-test-output"+testId++,tests.appendChild(li))},setup:function(){if(this.module!==config.previousModule?(config.previousModule&&runLoggingCallbacks("moduleDone",QUnit,{name:config.previousModule,failed:config.moduleStats.bad,passed:config.moduleStats.all-config.moduleStats.bad,total:config.moduleStats.all}),config.previousModule=this.module,config.moduleStats={all:0,bad:0},runLoggingCallbacks("moduleStart",QUnit,{name:this.module})):config.autorun&&runLoggingCallbacks("moduleStart",QUnit,{name:this.module}),config.current=this,this.testEnvironment=extend({setup:function(){},teardown:function(){}},this.moduleTestEnvironment),runLoggingCallbacks("testStart",QUnit,{name:this.testName,module:this.module}),QUnit.current_testEnvironment=this.testEnvironment,config.pollution||saveGlobal(),config.notrycatch)return void this.testEnvironment.setup.call(this.testEnvironment);try{this.testEnvironment.setup.call(this.testEnvironment)}catch(e){QUnit.pushFailure("Setup failed on "+this.testName+": "+e.message,extractStacktrace(e,1))}},run:function(){config.current=this;var running=id("qunit-testresult");if(running&&(running.innerHTML="Running: <br/>"+this.name),this.async&&QUnit.stop(),config.notrycatch)return void this.callback.call(this.testEnvironment,QUnit.assert);try{this.callback.call(this.testEnvironment,QUnit.assert)}catch(e){QUnit.pushFailure("Died on test #"+(this.assertions.length+1)+" "+this.stack+": "+e.message,extractStacktrace(e,0)),saveGlobal(),config.blocking&&QUnit.start()}},teardown:function(){if(config.current=this,config.notrycatch)return void this.testEnvironment.teardown.call(this.testEnvironment);try{this.testEnvironment.teardown.call(this.testEnvironment)}catch(e){QUnit.pushFailure("Teardown failed on "+this.testName+": "+e.message,extractStacktrace(e,1))}checkPollution()},finish:function(){config.current=this,config.requireExpects&&null==this.expected?QUnit.pushFailure("Expected number of assertions to be defined, but expect() was not called.",this.stack):null!=this.expected&&this.expected!=this.assertions.length?QUnit.pushFailure("Expected "+this.expected+" assertions, but "+this.assertions.length+" were run",this.stack):null!=this.expected||this.assertions.length||QUnit.pushFailure("Expected at least one assertion, but none were run - call expect(0) to accept zero assertions.",this.stack);var assertion,a,b,i,li,ol,test=this,good=0,bad=0,tests=id("qunit-tests");if(config.stats.all+=this.assertions.length,config.moduleStats.all+=this.assertions.length,tests){for(ol=document.createElement("ol"),i=0;i<this.assertions.length;i++)assertion=this.assertions[i],li=document.createElement("li"),li.className=assertion.result?"pass":"fail",li.innerHTML=assertion.message||(assertion.result?"okay":"failed"),ol.appendChild(li),assertion.result?good++:(bad++,config.stats.bad++,config.moduleStats.bad++);QUnit.config.reorder&&defined.sessionStorage&&(bad?sessionStorage.setItem("qunit-test-"+this.module+"-"+this.testName,bad):sessionStorage.removeItem("qunit-test-"+this.module+"-"+this.testName)),0===bad&&(ol.style.display="none"),b=document.createElement("strong"),b.innerHTML=this.name+" <b class='counts'>(<b class='failed'>"+bad+"</b>, <b class='passed'>"+good+"</b>, "+this.assertions.length+")</b>",addEvent(b,"click",function(){var next=b.nextSibling.nextSibling,display=next.style.display;next.style.display="none"===display?"block":"none"}),addEvent(b,"dblclick",function(e){var target=e&&e.target?e.target:window.event.srcElement;"span"!=target.nodeName.toLowerCase()&&"b"!=target.nodeName.toLowerCase()||(target=target.parentNode),window.location&&"strong"===target.nodeName.toLowerCase()&&(window.location=QUnit.url({testNumber:test.testNumber}))}),li=id(this.id),li.className=bad?"fail":"pass",li.removeChild(li.firstChild),a=li.firstChild,li.appendChild(b),li.appendChild(a),li.appendChild(ol)}else for(i=0;i<this.assertions.length;i++)this.assertions[i].result||(bad++,config.stats.bad++,config.moduleStats.bad++);runLoggingCallbacks("testDone",QUnit,{name:this.testName,module:this.module,failed:bad,passed:this.assertions.length-bad,total:this.assertions.length}),QUnit.reset(),config.current=void 0},queue:function(){function run(){synchronize(function(){test.setup()}),synchronize(function(){test.run()}),synchronize(function(){test.teardown()}),synchronize(function(){test.finish()})}var bad,test=this;synchronize(function(){test.init()}),bad=QUnit.config.reorder&&defined.sessionStorage&&+sessionStorage.getItem("qunit-test-"+this.module+"-"+this.testName),bad?run():synchronize(run,!0)}},QUnit={module:function(name,testEnvironment){config.currentModule=name,config.currentModuleTestEnvironment=testEnvironment,config.modules[name]=!0},asyncTest:function(testName,expected,callback){2===arguments.length&&(callback=expected,expected=null),QUnit.test(testName,expected,callback,!0)},test:function(testName,expected,callback,async){var test,name="<span class='test-name'>"+escapeInnerText(testName)+"</span>";2===arguments.length&&(callback=expected,expected=null),config.currentModule&&(name="<span class='module-name'>"+config.currentModule+"</span>: "+name),test=new Test({name:name,testName:testName,expected:expected,async:async,callback:callback,module:config.currentModule,moduleTestEnvironment:config.currentModuleTestEnvironment,stack:sourceFromStacktrace(2)}),validTest(test)&&test.queue()},expect:function(asserts){if(1!==arguments.length)return config.current.expected;config.current.expected=asserts},start:function(count){config.semaphore-=count||1,config.semaphore>0||(config.semaphore<0&&(config.semaphore=0),defined.setTimeout?window.setTimeout(function(){config.semaphore>0||(config.timeout&&clearTimeout(config.timeout),config.blocking=!1,process(!0))},13):(config.blocking=!1,process(!0)))},stop:function(count){config.semaphore+=count||1,config.blocking=!0,config.testTimeout&&defined.setTimeout&&(clearTimeout(config.timeout),config.timeout=window.setTimeout(function(){QUnit.ok(!1,"Test timed out"),config.semaphore=1,QUnit.start()},config.testTimeout))}},QUnit.assert={ok:function(result,msg){if(!config.current)throw new Error("ok() assertion outside test context, was "+sourceFromStacktrace(2));result=!!result;var source,details={module:config.current.module,name:config.current.testName,result:result,message:msg};msg=escapeInnerText(msg||(result?"okay":"failed")),msg="<span class='test-message'>"+msg+"</span>",result||(source=sourceFromStacktrace(2))&&(details.source=source,msg+="<table><tr class='test-source'><th>Source: </th><td><pre>"+escapeInnerText(source)+"</pre></td></tr></table>"),runLoggingCallbacks("log",QUnit,details),config.current.assertions.push({result:result,message:msg})},equal:function(actual,expected,message){QUnit.push(expected==actual,actual,expected,message)},notEqual:function(actual,expected,message){QUnit.push(expected!=actual,actual,expected,message)},deepEqual:function(actual,expected,message){QUnit.push(QUnit.equiv(actual,expected),actual,expected,message)},notDeepEqual:function(actual,expected,message){QUnit.push(!QUnit.equiv(actual,expected),actual,expected,message)},strictEqual:function(actual,expected,message){QUnit.push(expected===actual,actual,expected,message)},notStrictEqual:function(actual,expected,message){QUnit.push(expected!==actual,actual,expected,message)},throws:function(block,expected,message){var actual,ok=!1;"string"==typeof expected&&(message=expected,expected=null),config.current.ignoreGlobalErrors=!0;try{block.call(config.current.testEnvironment)}catch(e){actual=e}config.current.ignoreGlobalErrors=!1,actual?(expected?"regexp"===QUnit.objectType(expected)?ok=expected.test(actual):actual instanceof expected?ok=!0:!0===expected.call({},actual)&&(ok=!0):ok=!0,QUnit.push(ok,actual,null,message)):QUnit.pushFailure(message,null,"No exception was thrown.")}},extend(QUnit,QUnit.assert),QUnit.raises=QUnit.assert.throws,QUnit.equals=function(){QUnit.push(!1,!1,!1,"QUnit.equals has been deprecated since 2009 (e88049a0), use QUnit.equal instead")},QUnit.same=function(){QUnit.push(!1,!1,!1,"QUnit.same has been deprecated since 2009 (e88049a0), use QUnit.deepEqual instead")},function(){function F(){}F.prototype=QUnit,QUnit=new F,QUnit.constructor=F}(),config={queue:[],blocking:!0,hidepassed:!1,reorder:!0,altertitle:!0,requireExpects:!1,urlConfig:[{id:"noglobals",label:"Check for Globals",tooltip:"Enabling this will test if any test introduces new properties on the `window` object. Stored as query-strings."},{id:"notrycatch",label:"No try-catch",tooltip:"Enabling this will run tests outside of a try-catch block. Makes debugging exceptions in IE reasonable. Stored as query-strings."}],modules:{},begin:[],done:[],log:[],testStart:[],testDone:[],moduleStart:[],moduleDone:[]},function(){var i,current,location=window.location||{search:"",protocol:"file:"},params=location.search.slice(1).split("&"),length=params.length,urlParams={};if(params[0])for(i=0;i<length;i++)current=params[i].split("="),current[0]=decodeURIComponent(current[0]),current[1]=!current[1]||decodeURIComponent(current[1]),urlParams[current[0]]=current[1];QUnit.urlParams=urlParams,config.filter=urlParams.filter,config.module=urlParams.module,config.testNumber=parseInt(urlParams.testNumber,10)||null,QUnit.isLocal="file:"===location.protocol}(),extend(QUnit,{config:config,init:function(){extend(config,{stats:{all:0,bad:0},moduleStats:{all:0,bad:0},started:+new Date,updateRate:1e3,blocking:!1,autostart:!0,autorun:!1,filter:"",queue:[],semaphore:0});var tests,banner,result,qunit=id("qunit");qunit&&(qunit.innerHTML="<h1 id='qunit-header'>"+escapeInnerText(document.title)+"</h1><h2 id='qunit-banner'></h2><div id='qunit-testrunner-toolbar'></div><h2 id='qunit-userAgent'></h2><ol id='qunit-tests'></ol>"),tests=id("qunit-tests"),banner=id("qunit-banner"),result=id("qunit-testresult"),tests&&(tests.innerHTML=""),banner&&(banner.className=""),result&&result.parentNode.removeChild(result),tests&&(result=document.createElement("p"),result.id="qunit-testresult",result.className="result",tests.parentNode.insertBefore(result,tests),result.innerHTML="Running...<br/>&nbsp;")},reset:function(){var fixture=id("qunit-fixture");fixture&&(fixture.innerHTML=config.fixture)},triggerEvent:function(elem,type,event){document.createEvent?(event=document.createEvent("MouseEvents"),event.initMouseEvent(type,!0,!0,elem.ownerDocument.defaultView,0,0,0,0,0,!1,!1,!1,!1,0,null),elem.dispatchEvent(event)):elem.fireEvent&&elem.fireEvent("on"+type)},is:function(type,obj){return QUnit.objectType(obj)==type},objectType:function(obj){if(void 0===obj)return"undefined";if(null===obj)return"null";var type=toString.call(obj).match(/^\[object\s(.*)\]$/)[1]||"";switch(type){case"Number":return isNaN(obj)?"nan":"number";case"String":case"Boolean":case"Array":case"Date":case"RegExp":case"Function":return type.toLowerCase()}return"object"==typeof obj?"object":void 0},push:function(result,actual,expected,message){if(!config.current)throw new Error("assertion outside test context, was "+sourceFromStacktrace());var output,source,details={module:config.current.module,name:config.current.testName,result:result,message:message,actual:actual,expected:expected};message=escapeInnerText(message)||(result?"okay":"failed"),message="<span class='test-message'>"+message+"</span>",output=message,result||(expected=escapeInnerText(QUnit.jsDump.parse(expected)),actual=escapeInnerText(QUnit.jsDump.parse(actual)),output+="<table><tr class='test-expected'><th>Expected: </th><td><pre>"+expected+"</pre></td></tr>",actual!=expected&&(output+="<tr class='test-actual'><th>Result: </th><td><pre>"+actual+"</pre></td></tr>",output+="<tr class='test-diff'><th>Diff: </th><td><pre>"+QUnit.diff(expected,actual)+"</pre></td></tr>"),source=sourceFromStacktrace(),source&&(details.source=source,output+="<tr class='test-source'><th>Source: </th><td><pre>"+escapeInnerText(source)+"</pre></td></tr>"),output+="</table>"),runLoggingCallbacks("log",QUnit,details),config.current.assertions.push({result:!!result,message:output})},pushFailure:function(message,source,actual){if(!config.current)throw new Error("pushFailure() assertion outside test context, was "+sourceFromStacktrace(2));var output,details={module:config.current.module,name:config.current.testName,result:!1,message:message};message=escapeInnerText(message)||"error",message="<span class='test-message'>"+message+"</span>",output=message,output+="<table>",actual&&(output+="<tr class='test-actual'><th>Result: </th><td><pre>"+escapeInnerText(actual)+"</pre></td></tr>"),source&&(details.source=source,output+="<tr class='test-source'><th>Source: </th><td><pre>"+escapeInnerText(source)+"</pre></td></tr>"),output+="</table>",runLoggingCallbacks("log",QUnit,details),config.current.assertions.push({result:!1,message:output})},url:function(params){params=extend(extend({},QUnit.urlParams),params);var key,querystring="?";for(key in params)hasOwn.call(params,key)&&(querystring+=encodeURIComponent(key)+"="+encodeURIComponent(params[key])+"&");return window.location.pathname+querystring.slice(0,-1)},extend:extend,id:id,addEvent:addEvent}),extend(QUnit.constructor.prototype,{begin:registerLoggingCallback("begin"),done:registerLoggingCallback("done"),log:registerLoggingCallback("log"),testStart:registerLoggingCallback("testStart"),testDone:registerLoggingCallback("testDone"),moduleStart:registerLoggingCallback("moduleStart"),moduleDone:registerLoggingCallback("moduleDone")}),"undefined"!=typeof document&&"complete"!==document.readyState||(config.autorun=!0),QUnit.load=function(){runLoggingCallbacks("begin",QUnit,{});var banner,filter,i,label,len,main,ol,toolbar,userAgent,val,urlConfigCheckboxes,moduleFilter,numModules=0,moduleFilterHtml="",urlConfigHtml="",oldconfig=extend({},config);for(QUnit.init(),extend(config,oldconfig),config.blocking=!1,len=config.urlConfig.length,i=0;i<len;i++)val=config.urlConfig[i],"string"==typeof val&&(val={id:val,label:val,tooltip:"[no tooltip available]"}),config[val.id]=QUnit.urlParams[val.id],urlConfigHtml+="<input id='qunit-urlconfig-"+val.id+"' name='"+val.id+"' type='checkbox'"+(config[val.id]?" checked='checked'":"")+" title='"+val.tooltip+"'><label for='qunit-urlconfig-"+val.id+"' title='"+val.tooltip+"'>"+val.label+"</label>";moduleFilterHtml+="<label for='qunit-modulefilter'>Module: </label><select id='qunit-modulefilter' name='modulefilter'><option value='' "+(void 0===config.module?"selected":"")+">< All Modules ></option>";for(i in config.modules)config.modules.hasOwnProperty(i)&&(numModules+=1,moduleFilterHtml+="<option value='"+encodeURIComponent(i)+"' "+(config.module===i?"selected":"")+">"+i+"</option>");moduleFilterHtml+="</select>",userAgent=id("qunit-userAgent"),userAgent&&(userAgent.innerHTML=navigator.userAgent),banner=id("qunit-header"),banner&&(banner.innerHTML="<a href='"+QUnit.url({filter:void 0,module:void 0,testNumber:void 0})+"'>"+banner.innerHTML+"</a> "),toolbar=id("qunit-testrunner-toolbar"),toolbar&&(filter=document.createElement("input"),filter.type="checkbox",filter.id="qunit-filter-pass",addEvent(filter,"click",function(){var tmp,ol=document.getElementById("qunit-tests");filter.checked?ol.className=ol.className+" hidepass":(tmp=" "+ol.className.replace(/[\n\t\r]/g," ")+" ",ol.className=tmp.replace(/ hidepass /," ")),defined.sessionStorage&&(filter.checked?sessionStorage.setItem("qunit-filter-passed-tests","true"):sessionStorage.removeItem("qunit-filter-passed-tests"))}),(config.hidepassed||defined.sessionStorage&&sessionStorage.getItem("qunit-filter-passed-tests"))&&(filter.checked=!0,ol=document.getElementById("qunit-tests"),ol.className=ol.className+" hidepass"),toolbar.appendChild(filter),label=document.createElement("label"),label.setAttribute("for","qunit-filter-pass"),label.setAttribute("title","Only show tests and assertons that fail. Stored in sessionStorage."),label.innerHTML="Hide passed tests",toolbar.appendChild(label),urlConfigCheckboxes=document.createElement("span"),urlConfigCheckboxes.innerHTML=urlConfigHtml,addEvent(urlConfigCheckboxes,"change",function(event){var params={};params[event.target.name]=!!event.target.checked||void 0,window.location=QUnit.url(params)}),toolbar.appendChild(urlConfigCheckboxes),numModules>1&&(moduleFilter=document.createElement("span"),moduleFilter.setAttribute("id","qunit-modulefilter-container"),moduleFilter.innerHTML=moduleFilterHtml,addEvent(moduleFilter,"change",function(){var selectBox=moduleFilter.getElementsByTagName("select")[0],selectedModule=decodeURIComponent(selectBox.options[selectBox.selectedIndex].value);window.location=QUnit.url({module:""===selectedModule?void 0:selectedModule})}),toolbar.appendChild(moduleFilter))),main=id("qunit-fixture"),main&&(config.fixture=main.innerHTML),config.autostart&&QUnit.start()},addEvent(window,"load",QUnit.load),onErrorFnPrev=window.onerror,window.onerror=function(error,filePath,linerNr){var ret=!1;if(onErrorFnPrev&&(ret=onErrorFnPrev(error,filePath,linerNr)),!0!==ret){if(QUnit.config.current){if(QUnit.config.current.ignoreGlobalErrors)return!0;QUnit.pushFailure(error,filePath+":"+linerNr)}else QUnit.test("global failure",extend(function(){QUnit.pushFailure(error,filePath+":"+linerNr)},{validTest:validTest}));return!1}return ret},QUnit.equiv=function(){function bindCallbacks(o,callbacks,args){var prop=QUnit.objectType(o);if(prop)return"function"===QUnit.objectType(callbacks[prop])?callbacks[prop].apply(callbacks,args):callbacks[prop]}var innerEquiv,callers=[],parents=[],getProto=Object.getPrototypeOf||function(obj){return obj.__proto__},callbacks=function(){function useStrictEquality(b,a){return b instanceof a.constructor||a instanceof b.constructor?a==b:a===b}return{string:useStrictEquality,boolean:useStrictEquality,number:useStrictEquality,null:useStrictEquality,undefined:useStrictEquality,nan:function(b){return isNaN(b)},date:function(b,a){return"date"===QUnit.objectType(b)&&a.valueOf()===b.valueOf()},regexp:function(b,a){return"regexp"===QUnit.objectType(b)&&a.source===b.source&&a.global===b.global&&a.ignoreCase===b.ignoreCase&&a.multiline===b.multiline&&a.sticky===b.sticky},function:function(){var caller=callers[callers.length-1];return caller!==Object&&void 0!==caller},array:function(b,a){var i,j,len,loop;if("array"!==QUnit.objectType(b))return!1;if((len=a.length)!==b.length)return!1;for(parents.push(a),i=0;i<len;i++){for(loop=!1,j=0;j<parents.length;j++)parents[j]===a[i]&&(loop=!0);if(!loop&&!innerEquiv(a[i],b[i]))return parents.pop(),!1}return parents.pop(),!0},object:function(b,a){var i,j,loop,eq=!0,aProperties=[],bProperties=[];if(a.constructor!==b.constructor&&!(null===getProto(a)&&getProto(b)===Object.prototype||null===getProto(b)&&getProto(a)===Object.prototype))return!1;callers.push(a.constructor),parents.push(a);for(i in a){for(loop=!1,j=0;j<parents.length;j++)parents[j]===a[i]&&(loop=!0);if(aProperties.push(i),!loop&&!innerEquiv(a[i],b[i])){eq=!1;break}}callers.pop(),parents.pop();for(i in b)bProperties.push(i);return eq&&innerEquiv(aProperties.sort(),bProperties.sort())}}}();return innerEquiv=function(){var args=[].slice.apply(arguments);return args.length<2||function(a,b){return a===b||null!==a&&null!==b&&void 0!==a&&void 0!==b&&QUnit.objectType(a)===QUnit.objectType(b)&&bindCallbacks(a,callbacks,[b,a])}(args[0],args[1])&&arguments.callee.apply(this,args.splice(1,args.length-1))}}(),QUnit.jsDump=function(){function quote(str){return'"'+str.toString().replace(/"/g,'\\"')+'"'}function literal(o){return o+""}function join(pre,arr,post){var s=jsDump.separator(),base=jsDump.indent(),inner=jsDump.indent(1);return arr.join&&(arr=arr.join(","+s+inner)),arr?[pre,inner+arr,base+post].join(s):pre+post}function array(arr,stack){var i=arr.length,ret=new Array(i);for(this.up();i--;)ret[i]=this.parse(arr[i],void 0,stack);return this.down(),join("[",ret,"]")}var reName=/^function (\w+)/,jsDump={parse:function(obj,type,stack){stack=stack||[];var inStack,res,parser=this.parsers[type||this.typeOf(obj)];return type=typeof parser,inStack=inArray(obj,stack),-1!=inStack?"recursion("+(inStack-stack.length)+")":"function"==type?(stack.push(obj),res=parser.call(this,obj,stack),stack.pop(),res):"string"==type?parser:this.parsers.error},typeOf:function(obj){return null===obj?"null":void 0===obj?"undefined":QUnit.is("regexp",obj)?"regexp":QUnit.is("date",obj)?"date":QUnit.is("function",obj)?"function":void 0!==typeof obj.setInterval&&void 0!==obj.document&&void 0===obj.nodeType?"window":9===obj.nodeType?"document":obj.nodeType?"node":"[object Array]"===toString.call(obj)||"number"==typeof obj.length&&void 0!==obj.item&&(obj.length?obj.item(0)===obj[0]:null===obj.item(0)&&void 0===obj[0])?"array":typeof obj},separator:function(){return this.multiline?this.HTML?"<br />":"\n":this.HTML?"&nbsp;":" "},indent:function(extra){if(!this.multiline)return"";var chr=this.indentChar;return this.HTML&&(chr=chr.replace(/\t/g,"   ").replace(/ /g,"&nbsp;")),new Array(this._depth_+(extra||0)).join(chr)},up:function(a){this._depth_+=a||1},down:function(a){this._depth_-=a||1},setParser:function(name,parser){this.parsers[name]=parser},quote:quote,literal:literal,join:join,_depth_:1,parsers:{window:"[Window]",document:"[Document]",error:"[ERROR]",unknown:"[Unknown]",null:"null",undefined:"undefined",function:function(fn){var ret="function",name="name"in fn?fn.name:(reName.exec(fn)||[])[1];return name&&(ret+=" "+name),ret+="( ",ret=[ret,QUnit.jsDump.parse(fn,"functionArgs"),"){"].join(""),join(ret,QUnit.jsDump.parse(fn,"functionCode"),"}")},array:array,nodelist:array,arguments:array,object:function(map,stack){var keys,key,val,i,ret=[];if(QUnit.jsDump.up(),Object.keys)keys=Object.keys(map);else{keys=[];for(key in map)keys.push(key)}for(keys.sort(),i=0;i<keys.length;i++)key=keys[i],val=map[key],ret.push(QUnit.jsDump.parse(key,"key")+": "+QUnit.jsDump.parse(val,void 0,stack));return QUnit.jsDump.down(),join("{",ret,"}")},node:function(node){var a,val,open=QUnit.jsDump.HTML?"&lt;":"<",close=QUnit.jsDump.HTML?"&gt;":">",tag=node.nodeName.toLowerCase(),ret=open+tag;for(a in QUnit.jsDump.DOMAttrs)(val=node[QUnit.jsDump.DOMAttrs[a]])&&(ret+=" "+a+"="+QUnit.jsDump.parse(val,"attribute"));return ret+close+open+"/"+tag+close},functionArgs:function(fn){var args,l=fn.length;if(!l)return"";for(args=new Array(l);l--;)args[l]=String.fromCharCode(97+l);return" "+args.join(", ")+" "},key:quote,functionCode:"[code]",attribute:quote,string:quote,date:quote,regexp:literal,number:literal,boolean:literal},DOMAttrs:{id:"id",name:"name",class:"className"},HTML:!1,indentChar:"  ",multiline:!0};return jsDump}(),QUnit.diff=function(){function diff(o,n){var i,ns={},os={};for(i=0;i<n.length;i++)null==ns[n[i]]&&(ns[n[i]]={rows:[],o:null}),ns[n[i]].rows.push(i);for(i=0;i<o.length;i++)null==os[o[i]]&&(os[o[i]]={rows:[],n:null}),os[o[i]].rows.push(i);for(i in ns)hasOwn.call(ns,i)&&1==ns[i].rows.length&&void 0!==os[i]&&1==os[i].rows.length&&(n[ns[i].rows[0]]={text:n[ns[i].rows[0]],row:os[i].rows[0]},o[os[i].rows[0]]={text:o[os[i].rows[0]],row:ns[i].rows[0]});for(i=0;i<n.length-1;i++)null!=n[i].text&&null==n[i+1].text&&n[i].row+1<o.length&&null==o[n[i].row+1].text&&n[i+1]==o[n[i].row+1]&&(n[i+1]={text:n[i+1],row:n[i].row+1},o[n[i].row+1]={text:o[n[i].row+1],row:i+1});for(i=n.length-1;i>0;i--)null!=n[i].text&&null==n[i-1].text&&n[i].row>0&&null==o[n[i].row-1].text&&n[i-1]==o[n[i].row-1]&&(n[i-1]={text:n[i-1],row:n[i].row-1},o[n[i].row-1]={text:o[n[i].row-1],row:i-1});return{o:o,n:n}}return function(o,n){o=o.replace(/\s+$/,""),n=n.replace(/\s+$/,"");var i,pre,str="",out=diff(""===o?[]:o.split(/\s+/),""===n?[]:n.split(/\s+/)),oSpace=o.match(/\s+/g),nSpace=n.match(/\s+/g);if(null==oSpace?oSpace=[" "]:oSpace.push(" "),null==nSpace?nSpace=[" "]:nSpace.push(" "),0===out.n.length)for(i=0;i<out.o.length;i++)str+="<del>"+out.o[i]+oSpace[i]+"</del>";else{if(null==out.n[0].text)for(n=0;n<out.o.length&&null==out.o[n].text;n++)str+="<del>"+out.o[n]+oSpace[n]+"</del>";for(i=0;i<out.n.length;i++)if(null==out.n[i].text)str+="<ins>"+out.n[i]+nSpace[i]+"</ins>";else{for(pre="",n=out.n[i].row+1;n<out.o.length&&null==out.o[n].text;n++)pre+="<del>"+out.o[n]+oSpace[n]+"</del>";str+=" "+out.n[i].text+nSpace[i]+pre}}return str}}(),extend(exports,QUnit)}()},3120:function(module,exports){},3121:function(module,exports,__webpack_require__){"use strict";var _es=__webpack_require__(356),_window$QUnit=window.QUnit,test=_window$QUnit.test,_module=_window$QUnit.module,equal=_window$QUnit.equal;_module("Content type"),test("body",function(){var contentType=(0,_es.getContentType)([JSON.stringify({foo:"baz"}),JSON.stringify({foo:"bar"})].join("\n"));equal(contentType,"application/json")}),test("no body",function(){var contentType=(0,_es.getContentType)("");equal(contentType,void 0)})},3122:function(module,exports,__webpack_require__){"use strict";var _=__webpack_require__(0),utils=__webpack_require__(264),collapsingTests=__webpack_require__(3123),expandingTests=__webpack_require__(3124),_window$QUnit=window.QUnit,test=_window$QUnit.test,_module=_window$QUnit.module,deepEqual=_window$QUnit.deepEqual;_module("Utils class"),_.each(collapsingTests.split(/^=+$/m),function(fixture){if(""!=fixture.trim()){fixture=fixture.split(/^-+$/m);var name=fixture[0].trim(),expanded=fixture[1].trim(),collapsed=fixture[2].trim();test("Literal collapse - "+name,function(){deepEqual(utils.collapseLiteralStrings(expanded),collapsed)})}}),_.each(expandingTests.split(/^=+$/m),function(fixture){if(""!=fixture.trim()){fixture=fixture.split(/^-+$/m);var name=fixture[0].trim(),collapsed=fixture[1].trim(),expanded=fixture[2].trim();test("Literal expand - "+name,function(){deepEqual(utils.expandLiteralStrings(collapsed),expanded)}),test("extract deprecation messages",function(){deepEqual(utils.extractDeprecationMessages('299 Elasticsearch-6.0.0-alpha1-SNAPSHOT-abcdef1 "this is a warning" "Mon, 27 Feb 2017 14:52:14 GMT"'),["#! Deprecation: this is a warning"]),deepEqual(utils.extractDeprecationMessages('299 Elasticsearch-6.0.0-alpha1-SNAPSHOT-abcdef1 "this is a warning" "Mon, 27 Feb 2017 14:52:14 GMT", 299 Elasticsearch-6.0.0-alpha1-SNAPSHOT-abcdef1 "this is a second warning" "Mon, 27 Feb 2017 14:52:14 GMT"'),["#! Deprecation: this is a warning","#! Deprecation: this is a second warning"]),deepEqual(utils.extractDeprecationMessages('299 Elasticsearch-6.0.0-alpha1-SNAPSHOT-abcdef1 "this is a warning, and it includes a comma" "Mon, 27 Feb 2017 14:52:14 GMT"'),["#! Deprecation: this is a warning, and it includes a comma"]),deepEqual(utils.extractDeprecationMessages('299 Elasticsearch-6.0.0-alpha1-SNAPSHOT-abcdef1 "this is a warning, and it includes an escaped backslash \\\\ and a pair of \\"escaped quotes\\"" "Mon, 27 Feb 2017 14:52:14 GMT"'),['#! Deprecation: this is a warning, and it includes an escaped backslash \\ and a pair of "escaped quotes"'])}),test("unescape",function(){deepEqual(utils.unescape("escaped backslash \\\\"),"escaped backslash \\"),deepEqual(utils.unescape('a pair of \\"escaped quotes\\"'),'a pair of "escaped quotes"'),deepEqual(utils.unescape('escaped quotes do not have to come in pairs: \\"'),'escaped quotes do not have to come in pairs: "')}),test("split on unquoted comma followed by space",function(){deepEqual(utils.splitOnUnquotedCommaSpace("a, b"),["a","b"]),deepEqual(utils.splitOnUnquotedCommaSpace("a,b, c"),["a,b","c"]),deepEqual(utils.splitOnUnquotedCommaSpace('"a, b"'),['"a, b"']),deepEqual(utils.splitOnUnquotedCommaSpace('"a, b", c'),['"a, b"',"c"]),deepEqual(utils.splitOnUnquotedCommaSpace('"a, b\\", c"'),['"a, b\\", c"']),deepEqual(utils.splitOnUnquotedCommaSpace(", a, b"),["","a","b"]),deepEqual(utils.splitOnUnquotedCommaSpace("a, b, "),["a","b",""]),deepEqual(utils.splitOnUnquotedCommaSpace('\\"a, b", "c, d\\", e", f"'),['\\"a','b", "c','d\\"','e", f"'])})}})},3123:function(module,exports){module.exports='==========\nString only 1\n-------------------------------------\n""" hello\nto you """\n-------------------------------------\n" hello\\nto you "\n==========\nString only 2\n-------------------------------------\n""" \nstartning with new lines and ending as well\n """\n-------------------------------------\n"startning with new lines and ending as well"\n==========\nStrings in requests\n-------------------------------------\n{\n  "f": { "somefield" : """\ntest\ntest2\n""" },\n  "g": { "script" : """second + "\\";""" },\n  "h": 1,\n  "script": "a + 2"\n}\n-------------------------------------\n{\n  "f": { "somefield" : "test\\ntest2" },\n  "g": { "script" : "second + \\"\\\\\\";" },\n  "h": 1,\n  "script": "a + 2"\n}'},3124:function(module,exports){module.exports='==========\nScripts in requests\n-------------------------------------\n{\n  "f": { "script" : { "inline": "test\\ntest\\\\2" } },\n  "g": { "script" : "second + \\"\\\\\\";" },\n  "f": "short with \\\\",\n  "h": 1,\n  "script": "a + 2"\n}\n-------------------------------------\n{\n  "f": { "script" : { "inline": """\ntest\ntest\\2\n""" } },\n  "g": { "script" : """second + "\\";""" },\n  "f": "short with \\\\",\n  "h": 1,\n  "script": "a + 2"\n}\n'},3125:function(module,exports,__webpack_require__){"use strict";function patterns_test(name,endpoints,tokenPath,expectedContext,globalUrlComponentFactories){test(name,function(){var patternMatcher=new url_pattern_matcher.UrlPatternMatcher(globalUrlComponentFactories);_.each(endpoints,function(e,id){e.id=id,_.each(e.patterns,function(p){patternMatcher.addEndpoint(p,e)})}),"string"==typeof tokenPath&&("$"==tokenPath[tokenPath.length-1]&&(tokenPath=tokenPath.substr(0,tokenPath.length-1)+"/"+url_pattern_matcher.URL_PATH_END_MARKER),tokenPath=_.map(tokenPath.split("/"),function(p){return p=p.split(","),1===p.length?p[0]:p})),expectedContext.autoCompleteSet&&(expectedContext.autoCompleteSet=_.map(expectedContext.autoCompleteSet,function(t){return _.isString(t)&&(t={name:t}),t}),expectedContext.autoCompleteSet=_.sortBy(expectedContext.autoCompleteSet,"name"));var context={};expectedContext.method&&(context.method=expectedContext.method),autocomplete_engine.populateContext(tokenPath,context,null,expectedContext.autoCompleteSet,patternMatcher.getTopLevelComponents()),context.endpoint&&(context.endpoint=context.endpoint.id),context.autoCompleteSet&&(context.autoCompleteSet=_.sortBy(context.autoCompleteSet,"name")),deepEqual(context,expectedContext)})}function t(name,meta){return meta?{name:name,meta:meta}:name}var _=__webpack_require__(0),url_pattern_matcher=__webpack_require__(528),autocomplete_engine=__webpack_require__(138),_window$QUnit=window.QUnit,test=_window$QUnit.test,_module=_window$QUnit.module,deepEqual=_window$QUnit.deepEqual;_module("Url autocomplete"),function(){var endpoints={1:{patterns:["a/b"]}};patterns_test("simple single path - completion",endpoints,"a/b$",{endpoint:"1"}),patterns_test("simple single path - completion, with auto complete",endpoints,"a/b",{autoCompleteSet:[]}),patterns_test("simple single path - partial, without auto complete",endpoints,"a",{}),patterns_test("simple single path - partial, with auto complete",endpoints,"a",{autoCompleteSet:["b"]}),patterns_test("simple single path - partial, with auto complete",endpoints,[],{autoCompleteSet:["a/b"]}),patterns_test("simple single path - different path",endpoints,"a/c",{})}(),function(){var endpoints={1:{patterns:["a/b","a/b/{p}"]},2:{patterns:["a/c"]}};patterns_test("shared path  - completion 1",endpoints,"a/b$",{endpoint:"1"}),patterns_test("shared path  - completion 2",endpoints,"a/c$",{endpoint:"2"}),patterns_test("shared path  - completion 1 with param",endpoints,"a/b/v$",{endpoint:"1",p:"v"}),patterns_test("shared path - partial, with auto complete",endpoints,"a",{autoCompleteSet:["b","c"]}),patterns_test("shared path - partial, with auto complete of param, no options",endpoints,"a/b",{autoCompleteSet:[]}),patterns_test("shared path - partial, without auto complete",endpoints,"a",{}),patterns_test("shared path - different path - with auto complete",endpoints,"a/e",{autoCompleteSet:[]}),patterns_test("shared path - different path - without auto complete",endpoints,"a/e",{})}(),function(){var endpoints={1:{patterns:["a/{p}"],url_components:{p:["a","b"]}},2:{patterns:["a/c"]}};patterns_test("option testing - completion 1",endpoints,"a/a$",{endpoint:"1",p:["a"]}),patterns_test("option testing - completion 2",endpoints,"a/b$",{endpoint:"1",p:["b"]}),patterns_test("option testing - completion 3",endpoints,"a/b,a$",{endpoint:"1",p:["b","a"]}),patterns_test("option testing - completion 4",endpoints,"a/c$",{endpoint:"2"}),patterns_test("option testing  - completion 5",endpoints,"a/d$",{}),patterns_test("option testing - partial, with auto complete",endpoints,"a",{autoCompleteSet:[t("a","p"),t("b","p"),"c"]}),patterns_test("option testing - partial, without auto complete",endpoints,"a",{}),patterns_test("option testing - different path - with auto complete",endpoints,"a/e",{autoCompleteSet:[]})}(),function(){var endpoints={1:{patterns:["a/{p}"],url_components:{p:["a","b"]}},2:{patterns:["b/{p}"]},3:{patterns:["b/{l}/c"],url_components:{l:{type:"list",list:["la","lb"],allow_non_valid:!0}}}},globalFactories={p:function(name,parent){return new autocomplete_engine.ListComponent(name,["g1","g2"],parent)}};patterns_test("global parameters testing - completion 1",endpoints,"a/a$",{endpoint:"1",p:["a"]},globalFactories),patterns_test("global parameters testing - completion 2",endpoints,"b/g1$",{endpoint:"2",p:["g1"]},globalFactories),patterns_test("global parameters testing - partial, with auto complete",endpoints,"a",{autoCompleteSet:[t("a","p"),t("b","p")]},globalFactories),patterns_test("global parameters testing - partial, with auto complete 2",endpoints,"b",{autoCompleteSet:[t("g1","p"),t("g2","p"),t("la","l"),t("lb","l")]},globalFactories),patterns_test("Non valid token acceptance - partial, with auto complete 1",endpoints,"b/la",{autoCompleteSet:["c"],l:["la"]},globalFactories),patterns_test("Non valid token acceptance - partial, with auto complete 2",endpoints,"b/non_valid",{autoCompleteSet:["c"],l:["non_valid"]},globalFactories)}(),function(){var endpoints={1:{patterns:["a/b/{p}/c/e"]}};patterns_test("look ahead - autocomplete before param 1",endpoints,"a",{autoCompleteSet:["b"]}),patterns_test("look ahead - autocomplete before param 2",endpoints,[],{autoCompleteSet:["a/b"]}),patterns_test("look ahead - autocomplete after param 1",endpoints,"a/b/v",{autoCompleteSet:["c/e"],p:"v"}),patterns_test("look ahead - autocomplete after param 2",endpoints,"a/b/v/c",{autoCompleteSet:["e"],p:"v"})}(),function(){var endpoints={"1_param":{patterns:["a/{p}"],methods:["GET"]},"2_explicit":{patterns:["a/b"],methods:["GET"]}},e=_.cloneDeep(endpoints);e["1_param"].priority=1,patterns_test("Competing endpoints - priority 1",e,"a/b$",{method:"GET",endpoint:"1_param",p:"b"}),e=_.cloneDeep(endpoints),e["1_param"].priority=1,e["2_explicit"].priority=0,patterns_test("Competing endpoints - priority 2",e,"a/b$",{method:"GET",endpoint:"2_explicit"}),e=_.cloneDeep(endpoints),e["2_explicit"].priority=0,patterns_test("Competing endpoints - priority 3",e,"a/b$",{method:"GET",endpoint:"2_explicit"})}(),function(){var endpoints={"1_GET":{patterns:["a"],methods:["GET"]},"1_PUT":{patterns:["a"],methods:["PUT"]},"2_GET":{patterns:["a/b"],methods:["GET"]},"2_DELETE":{patterns:["a/b"],methods:["DELETE"]}};patterns_test("Competing endpoint - sub url of another - auto complete",endpoints,"a",{method:"GET",autoCompleteSet:["b"]}),patterns_test("Competing endpoint - sub url of another, complete 1",endpoints,"a$",{method:"GET",endpoint:"1_GET"}),patterns_test("Competing endpoint - sub url of another, complete 2",endpoints,"a$",{method:"PUT",endpoint:"1_PUT"}),patterns_test("Competing endpoint - sub url of another, complete 3",endpoints,"a$",{method:"DELETE"}),patterns_test("Competing endpoint - extension of another, complete 1, auto complete",endpoints,"a/b$",{method:"PUT",autoCompleteSet:[]}),patterns_test("Competing endpoint - extension of another, complete 1",endpoints,"a/b$",{method:"GET",endpoint:"2_GET"}),patterns_test("Competing endpoint - extension of another, complete 1",endpoints,"a/b$",{method:"DELETE",endpoint:"2_DELETE"}),patterns_test("Competing endpoint - extension of another, complete 1",endpoints,"a/b$",{method:"PUT"})}()},3126:function(module,exports,__webpack_require__){"use strict";function param_test(name,description,tokenPath,expectedContext,globalParams){test(name,function(){var urlParams=new url_params.UrlParams(description,globalParams||{});"string"==typeof tokenPath&&(tokenPath=_.map(tokenPath.split("/"),function(p){return p=p.split(","),1===p.length?p[0]:p})),expectedContext.autoCompleteSet&&(expectedContext.autoCompleteSet=_.map(expectedContext.autoCompleteSet,function(t){return _.isString(t)&&(t={name:t}),t}),expectedContext.autoCompleteSet=_.sortBy(expectedContext.autoCompleteSet,"name"));var context={};autocomplete_engine.populateContext(tokenPath,context,null,expectedContext.autoCompleteSet,urlParams.getTopLevelComponents()),context.autoCompleteSet&&(context.autoCompleteSet=_.sortBy(context.autoCompleteSet,"name")),deepEqual(context,expectedContext)})}function t(name,meta,insert_value){var r=name;return meta&&(r={name:name,meta:meta},"param"!==meta||insert_value||(insert_value=name+"=")),insert_value&&(_.isString(r)&&(r={name:name}),r.insert_value=insert_value),r}var _=__webpack_require__(0),url_params=__webpack_require__(955),autocomplete_engine=__webpack_require__(138),_window$QUnit=window.QUnit,test=_window$QUnit.test,_module=_window$QUnit.module,deepEqual=_window$QUnit.deepEqual;_module("Url params"),function(){var params={a:["1","2"],b:"__flag__"};param_test("settings params",params,"a/1",{a:["1"]}),param_test("autocomplete top level",params,[],{autoCompleteSet:[t("a","param"),t("b","flag")]}),param_test("autocomplete top level, with defaults",params,[],{autoCompleteSet:[t("a","param"),t("b","flag"),t("c","param")]},{c:[2]}),param_test("autocomplete values",params,"a",{autoCompleteSet:[t("1","a"),t("2","a")]}),param_test("autocomplete values flag",params,"b",{autoCompleteSet:[t("true","b"),t("false","b")]})}()},3127:function(module,exports,__webpack_require__){"use strict";var _=__webpack_require__(0),curl=__webpack_require__(956),curlTests=__webpack_require__(3128),_window$QUnit=window.QUnit,test=_window$QUnit.test,_module=_window$QUnit.module,ok=_window$QUnit.ok,equal=_window$QUnit.equal;_module("CURL");var notCURLS=["sldhfsljfhs",'s;kdjfsldkfj curl -XDELETE ""','{ "hello": 1 }'];_.each(notCURLS,function(notCURL,i){test("cURL Detection - broken strings "+i,function(){ok(!curl.detectCURL(notCURL),"marked as curl while it wasn't:"+notCURL)})}),_.each(curlTests.split(/^=+$/m),function(fixture){if(""!=fixture.trim()){fixture=fixture.split(/^-+$/m);var name=fixture[0].trim(),curlText=fixture[1],response=fixture[2].trim();test("cURL Detection - "+name,function(){ok(curl.detectCURL(curlText),"marked as not curl while it was:"+curlText);var r=curl.parseCURL(curlText);equal(r,response)})}})},3128:function(module,exports){module.exports='==========\nCurl 1\n-------------------------------------\ncurl -XPUT \'http://localhost:9200/twitter/tweet/1\' -d \'{\n  "user" : "kimchy",\n  "post_date" : "2009-11-15T14:12:12",\n  "message" : "trying out Elastic Search"\n}\'\n-------------------------------------\nPUT /twitter/tweet/1\n{\n  "user" : "kimchy",\n  "post_date" : "2009-11-15T14:12:12",\n  "message" : "trying out Elastic Search"\n}\n==========\nCurl 2\n-------------------------------------\ncurl -XGET "localhost/twitter/tweet/1?version=2" -d \'{\n   "message" : "elasticsearch now has versioning support, double cool!"\n}\'\n-------------------------------------\nGET /twitter/tweet/1?version=2\n{\n   "message" : "elasticsearch now has versioning support, double cool!"\n}\n===========\nCurl 3\n-------------------------------------\ncurl -XPOST https://localhost/twitter/tweet/1?version=2 -d \'{\n   "message" : "elasticsearch now has versioning support, double cool!"\n}\'\n-------------------------------------\nPOST /twitter/tweet/1?version=2\n{\n   "message" : "elasticsearch now has versioning support, double cool!"\n}\n=========\nCurl 4\n-------------------------------------\ncurl -XPOST https://localhost/twitter\n-------------------------------------\nPOST /twitter\n==========\nCurl 5\n-------------------------------------\ncurl -X POST https://localhost/twitter/\n-------------------------------------\nPOST /twitter/\n=============\nCurl 6\n-------------------------------------\ncurl -s -XPOST localhost:9200/missing-test -d\'\n{\n  "mappings": {\n  }\n}\'\n-------------------------------------\nPOST /missing-test\n{\n  "mappings": {\n  }\n}\n=========================\nCurl 7\n-------------------------------------\ncurl \'localhost:9200/missing-test/doc/_search?pretty\' -d\'\n{\n  "query": {\n  },\n}\'\n-------------------------------------\nGET /missing-test/doc/_search?pretty\n{\n  "query": {\n  },\n}\n===========================\nCurl 8\n-------------------------------------\ncurl localhost:9200/ -d\'\n{\n  "query": {\n  }\n}\'\n-------------------------------------\nGET /\n{\n  "query": {\n  }\n}\n====================================\nCurl Script\n-------------------------------------\n#!bin/sh\n\n// test something\ncurl \'localhost:9200/missing-test/doc/_search?pretty\' -d\'\n{\n  "query": {\n  },\n}\'\n\n\ncurl -XPOST https://localhost/twitter\n\n#someother comments\ncurl localhost:9200/ -d\'\n{\n  "query": {\n  }\n}\'\n\n\n-------------------\n# test something\nGET /missing-test/doc/_search?pretty\n{\n  "query": {\n  },\n}\n\nPOST /twitter\n\n#someother comments\nGET /\n{\n  "query": {\n  }\n}\n====================================\nCurl with some text\n-------------------------------------\nThis is what I meant:\n\ncurl \'localhost:9200/missing-test/doc/_search?\'\n\nThis, however, does work:\ncurl \'localhost:9200/missing/doc/_search?\'\n-------------------\n### This is what I meant:\n\nGET /missing-test/doc/_search?\n\n### This, however, does work:\nGET /missing/doc/_search?\n'},3129:function(module,exports,__webpack_require__){"use strict";function testUrlContext(tokenPath,otherTokenValues,expectedContext){function norm(t){return _lodash2.default.isString(t)?{name:t}:t}expectedContext.autoCompleteSet&&(expectedContext.autoCompleteSet=_lodash2.default.map(expectedContext.autoCompleteSet,function(t){return _lodash2.default.isString(t)&&(t={name:t}),t}));var context={otherTokenValues:otherTokenValues};autocomplete_engine.populateContext(tokenPath,context,null,expectedContext.autoCompleteSet,kb.getTopLevelUrlCompleteComponents()),context.endpoint&&(context.endpoint=context.endpoint.id),delete context.otherTokenValues,context.autoCompleteSet&&(context.autoCompleteSet=_lodash2.default.sortBy(_lodash2.default.map(context.autoCompleteSet,norm),"name")),expectedContext.autoCompleteSet&&(expectedContext.autoCompleteSet=_lodash2.default.sortBy(_lodash2.default.map(expectedContext.autoCompleteSet,norm),"name")),deepEqual(context,expectedContext)}function t(term){return{name:term,meta:"type"}}function i(term){return{name:term,meta:"index"}}function index_test(name,tokenPath,otherTokenValues,expectedContext){test(name,function(){var test_api=new kb._test.loadApisFromJson({index_test:{endpoints:{_multi_indices:{patterns:["{indices}/_multi_indices"]},_single_index:{patterns:["{index}/_single_index"]},_no_index:{}}}},kb._test.globalUrlComponentFactories);kb.setActiveApi(test_api),mappings.loadMappings(MAPPING),testUrlContext(tokenPath,otherTokenValues,expectedContext)})}function type_test(name,tokenPath,otherTokenValues,expectedContext){test(name,function(){var test_api=kb._test.loadApisFromJson({type_test:{endpoints:{_multi_types:{patterns:["{indices}/{types}/_multi_types"]},_single_type:{patterns:["{indices}/{type}/_single_type"]},_no_types:{patterns:["{indices}/_no_types"]}}}},kb._test.globalUrlComponentFactories);kb.setActiveApi(test_api),mappings.loadMappings(MAPPING),testUrlContext(tokenPath,otherTokenValues,expectedContext)})}var _lodash=__webpack_require__(0),_lodash2=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(_lodash),kb=__webpack_require__(529),mappings=__webpack_require__(265),autocomplete_engine=__webpack_require__(138),_window$QUnit=window.QUnit,test=_window$QUnit.test,_module=_window$QUnit.module,deepEqual=_window$QUnit.deepEqual;_module("Knowledge base",{setup:function(){mappings.clear(),kb.setActiveApi(kb._test.loadApisFromJson({}))},teardown:function(){mappings.clear(),kb.setActiveApi(kb._test.loadApisFromJson({}))}});var MAPPING={index1:{"type1.1":{properties:{"field1.1.1":{type:"string"},"field1.1.2":{type:"long"}}},"type1.2":{properties:{}}},index2:{"type2.1":{properties:{"field2.1.1":{type:"string"},"field2.1.2":{type:"string"}}}}};index_test("Index integration 1",[],[],{autoCompleteSet:["_no_index",i("index1"),i("index2")]}),index_test("Index integration 2",[],["index1"],{autoCompleteSet:["_no_index",i("index2")]}),index_test("Index integration 2",["index1"],[],{indices:["index1"],autoCompleteSet:["_multi_indices","_single_index"]}),index_test("Index integration 2",[["index1","index2"]],[],{indices:["index1","index2"],autoCompleteSet:["_multi_indices"]}),type_test("Type integration 1",["index1"],[],{indices:["index1"],autoCompleteSet:["_no_types",t("type1.1"),t("type1.2")]}),type_test("Type integration 2",["index1"],["type1.2"],{indices:["index1"],autoCompleteSet:["_no_types",t("type1.1")]}),type_test("Type integration 3",["index2"],[],{indices:["index2"],autoCompleteSet:["_no_types",t("type2.1")]}),type_test("Type integration 4",["index1","type1.2"],[],{indices:["index1"],types:["type1.2"],autoCompleteSet:["_multi_types","_single_type"]}),type_test("Type integration 5",[["index1","index2"],["type1.2","type1.1"]],[],{indices:["index1","index2"],types:["type1.2","type1.1"],autoCompleteSet:["_multi_types"]})},3141:function(module,exports,__webpack_require__){"use strict";function fc(f1,f2){return f1.name<f2.name?-1:f1.name>f2.name?1:0}function f(name,type){return{name:name,type:type||"string"}}var mappings=__webpack_require__(265),_window$QUnit=window.QUnit,test=_window$QUnit.test,_module=_window$QUnit.module,deepEqual=_window$QUnit.deepEqual;_module("Mappings",{setup:function(){mappings.clear()},teardown:function(){mappings.clear()}}),test("Multi fields",function(){mappings.loadMappings({index:{tweet:{properties:{first_name:{type:"multi_field",path:"just_name",fields:{first_name:{type:"string",index:"analyzed"},any_name:{type:"string",index:"analyzed"}}},last_name:{type:"multi_field",path:"just_name",fields:{last_name:{type:"string",index:"analyzed"},any_name:{type:"string",index:"analyzed"}}}}}}}),deepEqual(mappings.getFields("index").sort(fc),[f("any_name","string"),f("first_name","string"),f("last_name","string")])}),test("Multi fields 1.0 style",function(){mappings.loadMappings({index:{tweet:{properties:{first_name:{type:"string",index:"analyzed",path:"just_name",fields:{any_name:{type:"string",index:"analyzed"}}},last_name:{type:"string",index:"no",fields:{raw:{type:"string",index:"analyzed"}}}}}}}),deepEqual(mappings.getFields("index").sort(fc),[f("any_name","string"),f("first_name","string"),f("last_name","string"),f("last_name.raw","string")])}),test("Simple fields",function(){mappings.loadMappings({index:{tweet:{properties:{str:{type:"string"},number:{type:"int"}}}}}),deepEqual(mappings.getFields("index").sort(fc),[f("number","int"),f("str","string")])}),test("Simple fields - 1.0 style",function(){mappings.loadMappings({index:{mappings:{tweet:{properties:{str:{type:"string"},number:{type:"int"}}}}}}),deepEqual(mappings.getFields("index").sort(fc),[f("number","int"),f("str","string")])}),test("Nested fields",function(){mappings.loadMappings({index:{tweet:{properties:{person:{type:"object",properties:{name:{properties:{first_name:{type:"string"},last_name:{type:"string"}}},sid:{type:"string",index:"not_analyzed"}}},message:{type:"string"}}}}}),deepEqual(mappings.getFields("index",["tweet"]).sort(fc),[f("message"),f("person.name.first_name"),f("person.name.last_name"),f("person.sid")])}),test("Enabled fields",function(){mappings.loadMappings({index:{tweet:{properties:{person:{type:"object",properties:{name:{type:"object",enabled:!1},sid:{type:"string",index:"not_analyzed"}}},message:{type:"string"}}}}}),deepEqual(mappings.getFields("index",["tweet"]).sort(fc),[f("message"),f("person.sid")])}),test("Path tests",function(){mappings.loadMappings({index:{person:{properties:{name1:{type:"object",path:"just_name",properties:{first1:{type:"string"},last1:{type:"string",index_name:"i_last_1"}}},name2:{type:"object",path:"full",properties:{first2:{type:"string"},last2:{type:"string",index_name:"i_last_2"}}}}}}}),deepEqual(mappings.getFields().sort(fc),[f("first1"),f("i_last_1"),f("name2.first2"),f("name2.i_last_2")])}),test("Use index_name tests",function(){mappings.loadMappings({index:{person:{properties:{last1:{type:"string",index_name:"i_last_1"}}}}}),deepEqual(mappings.getFields().sort(fc),[f("i_last_1")])}),test("Aliases",function(){mappings.loadAliases({test_index1:{aliases:{alias1:{}}},test_index2:{aliases:{alias2:{filter:{term:{FIELD:"VALUE"}}},alias1:{}}}}),mappings.loadMappings({test_index1:{type1:{properties:{last1:{type:"string",index_name:"i_last_1"}}}},test_index2:{type2:{properties:{last1:{type:"string",index_name:"i_last_1"}}}}}),deepEqual(mappings.getIndices().sort(),["_all","alias1","alias2","test_index1","test_index2"]),deepEqual(mappings.getIndices(!1).sort(),["test_index1","test_index2"]),deepEqual(mappings.expandAliases(["alias1","test_index2"]).sort(),["test_index1","test_index2"]),deepEqual(mappings.expandAliases("alias2"),"test_index2")})},3142:function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function utils_test(name,prefix,data,test){var id=testCount++;"function"==typeof data&&(test=data,data=null),data&&"string"!=typeof data&&(data=JSON.stringify(data,null,3)),data?prefix&&(data=prefix+"\n"+data):data=prefix,asyncTest("Utils test "+id+" : "+name,function(){input.update(data,function(){test()})})}function compareRequest(requests,expected){Array.isArray(requests)||(requests=[requests],expected=[expected]),_lodash2.default.each(requests,function(r){delete r.range}),deepEqual(requests,expected)}function multi_req_test(name,editor_input,range,expected){utils_test("multi request select - "+name,editor_input,function(){input.getRequestsInRange(range,function(requests){_lodash2.default.each(expected,function(req){req.data=null==req.data?[]:[JSON.stringify(req.data,null,2)]}),compareRequest(requests,expected),start()})})}var _jquery=__webpack_require__(7),_jquery2=_interopRequireDefault(_jquery),_lodash=__webpack_require__(0),_lodash2=_interopRequireDefault(_lodash),_input=__webpack_require__(267),ace=__webpack_require__(50),editor_input1=__webpack_require__(3143),utils=__webpack_require__(264),aceRange=ace.require("ace/range"),_window$QUnit=window.QUnit,_module=_window$QUnit.module,asyncTest=_window$QUnit.asyncTest,deepEqual=_window$QUnit.deepEqual,equal=_window$QUnit.equal,start=_window$QUnit.start,input=void 0;_module("Editor",{setup:function(){input=(0,_input.initializeInput)((0,_jquery2.default)("#editor"),(0,_jquery2.default)("#editor_actions"),(0,_jquery2.default)("#copy_as_curl"),null),input.$el.show(),input.autocomplete._test.removeChangeListener()},teardown:function(){input.$el.hide(),input.autocomplete._test.addChangeListener()}});var testCount=0,simple_request={prefix:"POST _search",data:["{",'   "query": { "match_all": {} }',"}"].join("\n")},single_line_request={prefix:"POST _search",data:'{ "query": { "match_all": {} } }'},get_request_no_data={prefix:"GET _stats"},multi_doc_request={prefix:"POST _bulk",data_as_array:['{ "index": { "_index": "index", "_type":"type" } }','{ "field": 1 }']};multi_doc_request.data=multi_doc_request.data_as_array.join("\n"),utils_test("simple request range",simple_request.prefix,simple_request.data,function(){input.getRequestRange(function(range){compareRequest(range,new aceRange.Range(0,0,3,1)),start()})}),utils_test("simple request data",simple_request.prefix,simple_request.data,function(){input.getRequest(function(request){compareRequest(request,{method:"POST",url:"_search",data:[simple_request.data]}),start()})}),utils_test("simple request range, prefixed with spaces","   "+simple_request.prefix,simple_request.data,function(){input.getRequestRange(function(range){var expected=new aceRange.Range(0,0,3,1);deepEqual(range,expected),start()})}),utils_test("simple request data, prefixed with spaces","    "+simple_request.prefix,simple_request.data,function(){input.getRequest(function(request){compareRequest(request,{method:"POST",url:"_search",data:[simple_request.data]}),start()})}),utils_test("simple request range, suffixed with spaces",simple_request.prefix+"   ",simple_request.data+"  ",function(){input.getRequestRange(function(range){compareRequest(range,new aceRange.Range(0,0,3,1)),start()})}),utils_test("simple request data, suffixed with spaces",simple_request.prefix+"    ",simple_request.data+" ",function(){input.getRequest(function(request){compareRequest(request,{method:"POST",url:"_search",data:[simple_request.data]}),start()})}),utils_test("single line request range",single_line_request.prefix,single_line_request.data,function(){input.getRequestRange(function(range){compareRequest(range,new aceRange.Range(0,0,1,32)),start()})}),utils_test("full url: single line request data","POST https://somehoset/_search",single_line_request.data,function(){input.getRequest(function(request){compareRequest(request,{method:"POST",url:"https://somehoset/_search",data:[single_line_request.data]}),start()})}),utils_test("request with no data followed by a new line",get_request_no_data.prefix,"\n",function(){input.getRequestRange(function(range){compareRequest(range,new aceRange.Range(0,0,0,10)),start()})}),utils_test("request with no data followed by a new line (data)",get_request_no_data.prefix,"\n",function(){input.getRequest(function(request){compareRequest(request,{method:"GET",url:"_stats",data:[]}),start()})}),utils_test("request with no data",get_request_no_data.prefix,get_request_no_data.data,function(){input.getRequestRange(function(range){var expected=new aceRange.Range(0,0,0,10);deepEqual(range,expected),start()})}),utils_test("request with no data (data)",get_request_no_data.prefix,get_request_no_data.data,function(){input.getRequest(function(request){compareRequest(request,{method:"GET",url:"_stats",data:[]}),start()})}),utils_test("multi doc request range",multi_doc_request.prefix,multi_doc_request.data,function(){input.getRequestRange(function(range){var expected=new aceRange.Range(0,0,2,14);deepEqual(range,expected),start()})}),utils_test("multi doc request data",multi_doc_request.prefix,multi_doc_request.data,function(){input.getRequest(function(request){compareRequest(request,{method:"POST",url:"_bulk",data:multi_doc_request.data_as_array}),start()})});var script_request={prefix:"POST _search",data:["{",'   "query": { "script": """',"   some script ",'   """}',"}"].join("\n")};utils_test("script request range",script_request.prefix,script_request.data,function(){input.getRequestRange(function(range){compareRequest(range,new aceRange.Range(0,0,5,1)),start()})}),utils_test("simple request data",simple_request.prefix,simple_request.data,function(){input.getRequest(function(request){compareRequest(request,{method:"POST",url:"_search",data:[utils.collapseLiteralStrings(simple_request.data)]}),start()})}),multi_req_test("mid body to mid body",editor_input1,{start:{row:12},end:{row:17}},[{method:"PUT",url:"index_1/type1/1",data:{f:1}},{method:"PUT",url:"index_1/type1/2",data:{f:2}}]),multi_req_test("single request start to end",editor_input1,{start:{row:10},end:{row:13}},[{method:"PUT",url:"index_1/type1/1",data:{f:1}}]),multi_req_test("start to end, with comment",editor_input1,{start:{row:6},end:{row:13}},[{method:"GET",url:"_stats?level=shards",data:null},{method:"PUT",url:"index_1/type1/1",data:{f:1}}]),multi_req_test("before start to after end, with comments",editor_input1,{start:{row:4},end:{row:14}},[{method:"GET",url:"_stats?level=shards",data:null},{method:"PUT",url:"index_1/type1/1",data:{f:1}}]),multi_req_test("between requests",editor_input1,{start:{row:21},end:{row:22}},[]),multi_req_test("between requests - with comment",editor_input1,{start:{row:20},end:{row:22}},[]),multi_req_test("between requests - before comment",editor_input1,{start:{row:19},end:{row:22}},[]),function(name,editor_input,range,expected){utils_test("multi request copy as curl - "+name,editor_input,function(){input.getRequestsAsCURL(range,function(curl){equal(curl,expected),start()})})}("start to end, with comment",editor_input1,{start:{row:6},end:{row:13}},'\ncurl -XGET "http://localhost:9200/_stats?level=shards"\n\n#in between comment\n\ncurl -XPUT "http://localhost:9200/index_1/type1/1" -H \'Content-Type: application/json\' -d\'\n{\n  "f": 1\n}\''.trim())},3143:function(module,exports){module.exports='GET _search\n{\n  "query": { "match_all": {} }\n}\n\n#preceeding comment\nGET _stats?level=shards\n\n#in between comment\n\nPUT index_1/type1/1\n{\n  "f": 1\n}\n\nPUT index_1/type1/2\n{\n  "f": 2\n}\n\n# comment\n\n\nGET index_1/type1/1/_source?_source_include=f\n\nDELETE index_2\n\n'},3144:function(module,exports,__webpack_require__){"use strict";function tokensAsList(){var iter=new token_iterator.TokenIterator(input.getSession(),0,0),ret=[],t=iter.getCurrentToken();for(input.parser.isEmptyToken(t)&&(t=input.parser.nextNonEmptyToken(iter));t;)ret.push({value:t.value,type:t.type}),t=input.parser.nextNonEmptyToken(iter);return ret}function token_test(token_list,prefix,data){data&&"string"!=typeof data&&(data=JSON.stringify(data,null,3)),data?prefix&&(data=prefix+"\n"+data):data=prefix,asyncTest("Token test "+testCount+++" prefix: "+prefix,function(){input.update(data,function(){for(var tokens=tokensAsList(),normTokenList=[],i=0;i<token_list.length;i++)normTokenList.push({type:token_list[i++],value:token_list[i]});deepEqual(tokens,normTokenList,"Doc:\n"+data),start()})})}function statesAsList(){for(var ret=[],session=input.getSession(),maxLine=session.getLength(),row=0;row<maxLine;row++)ret.push(session.getState(row));return ret}function states_test(states_list,prefix,data){data&&"string"!=typeof data&&(data=JSON.stringify(data,null,3)),data?prefix&&(data=prefix+"\n"+data):data=prefix,asyncTest("States test "+testCount+++" prefix: "+prefix,function(){input.update(data,function(){var modes=statesAsList();deepEqual(modes,states_list,"Doc:\n"+data),start()})})}var _input=__webpack_require__(267),ace=__webpack_require__(50),$=__webpack_require__(7),input=void 0,token_iterator=ace.require("ace/token_iterator"),_window$QUnit=window.QUnit,_module=_window$QUnit.module,asyncTest=_window$QUnit.asyncTest,deepEqual=_window$QUnit.deepEqual,start=_window$QUnit.start;_module("Input Tokenization",{setup:function(){input=(0,_input.initializeInput)($("#editor"),$("#editor_actions"),$("#copy_as_curl"),null),input.$el.show(),input.autocomplete._test.removeChangeListener()},teardown:function(){input.$el.hide(),input.autocomplete._test.addChangeListener()}});var testCount=0;token_test(["method","GET","url.part","_search"],"GET _search"),token_test(["method","GET","url.slash","/","url.part","_search"],"GET /_search"),token_test(["method","GET","url.protocol_host","http://somehost","url.slash","/","url.part","_search"],"GET http://somehost/_search"),token_test(["method","GET","url.protocol_host","http://somehost"],"GET http://somehost"),token_test(["method","GET","url.protocol_host","http://somehost","url.slash","/"],"GET http://somehost/"),token_test(["method","GET","url.protocol_host","http://test:user@somehost","url.slash","/"],"GET http://test:user@somehost/"),token_test(["method","GET","url.part","_cluster","url.slash","/","url.part","nodes"],"GET _cluster/nodes"),token_test(["method","GET","url.slash","/","url.part","_cluster","url.slash","/","url.part","nodes"],"GET /_cluster/nodes"),token_test(["method","GET","url.part","index","url.slash","/","url.part","_search"],"GET index/_search"),token_test(["method","GET","url.part","index"],"GET index"),token_test(["method","GET","url.part","index","url.slash","/","url.part","type"],"GET index/type"),token_test(["method","GET","url.slash","/","url.part","index","url.slash","/","url.part","type","url.slash","/"],"GET /index/type/"),token_test(["method","GET","url.part","index","url.slash","/","url.part","type","url.slash","/","url.part","_search"],"GET index/type/_search"),token_test(["method","GET","url.part","index","url.slash","/","url.part","type","url.slash","/","url.part","_search","url.questionmark","?","url.param","value","url.equal","=","url.value","1"],"GET index/type/_search?value=1"),token_test(["method","GET","url.part","index","url.slash","/","url.part","type","url.slash","/","url.part","1"],"GET index/type/1"),token_test(["method","GET","url.slash","/","url.part","index1","url.comma",",","url.part","index2","url.slash","/"],"GET /index1,index2/"),token_test(["method","GET","url.slash","/","url.part","index1","url.comma",",","url.part","index2","url.slash","/","url.part","_search"],"GET /index1,index2/_search"),token_test(["method","GET","url.part","index1","url.comma",",","url.part","index2","url.slash","/","url.part","_search"],"GET index1,index2/_search"),token_test(["method","GET","url.slash","/","url.part","index1","url.comma",",","url.part","index2"],"GET /index1,index2"),token_test(["method","GET","url.part","index1","url.comma",",","url.part","index2"],"GET index1,index2"),token_test(["method","GET","url.slash","/","url.part","index1","url.comma",","],"GET /index1,"),token_test(["method","PUT","url.slash","/","url.part","index","url.slash","/"],"PUT /index/"),token_test(["method","GET","url.part","index","url.slash","/","url.part","_search"],"GET index/_search "),token_test(["method","PUT","url.slash","/","url.part","index"],"PUT /index"),token_test(["method","PUT","url.slash","/","url.part","index1","url.comma",",","url.part","index2","url.slash","/","url.part","type1","url.comma",",","url.part","type2"],"PUT /index1,index2/type1,type2"),token_test(["method","PUT","url.slash","/","url.part","index1","url.slash","/","url.part","type1","url.comma",",","url.part","type2","url.comma",","],"PUT /index1/type1,type2,"),token_test(["method","PUT","url.part","index1","url.comma",",","url.part","index2","url.slash","/","url.part","type1","url.comma",",","url.part","type2","url.slash","/","url.part","1234"],"PUT index1,index2/type1,type2/1234"),token_test(["method","POST","url.part","_search","paren.lparen","{","variable",'"q"',"punctuation.colon",":","paren.lparen","{","paren.rparen","}","paren.rparen","}"],'POST _search\n{\n  "q": {}\n  \n}'),token_test(["method","POST","url.part","_search","paren.lparen","{","variable",'"q"',"punctuation.colon",":","paren.lparen","{","variable",'"s"',"punctuation.colon",":","paren.lparen","{","paren.rparen","}","paren.rparen","}","paren.rparen","}"],'POST _search\n{\n  "q": { "s": {}}\n  \n}'),states_test(["start","json","json","start"],'POST _search\n{\n  "query": { "match_all": {} }\n}'),states_test(["start","json",["json","json"],["json","json"],"json","start"],'POST _search\n{\n  "query": { \n  "match_all": {} \n  }\n}'),states_test(["start","json","json","start"],'POST _search\n{\n  "script": { "inline": "" }\n}'),states_test(["start","json","json","start"],'POST _search\n{\n  "script": ""\n}'),states_test(["start","json",["json","json"],"json","start"],'POST _search\n{\n  "script": {\n   }\n}'),states_test(["start","json",["script-start","json","json","json"],["script-start","json","json","json"],["json","json"],"json","start"],'POST _search\n{\n  "test": { "script": """\n  test script\n """\n }\n}'),states_test(["start","json",["script-start","json"],["script-start","json"],"json","start"],'POST _search\n{\n  "script": """\n  test script\n """,\n}'),states_test(["start","json","json","start"],'POST _search\n{\n  "script": """test script""",\n}'),states_test(["start","json",["string_literal","json"],["string_literal","json"],"json","start"],'POST _search\n{\n  "somthing": """\n  test script\n """,\n}'),states_test(["start","json",["string_literal","json","json","json"],["string_literal","json","json","json"],["json","json"],["json","json"],"json","start"],'POST _search\n{\n  "somthing": { "f" : """\n  test script\n """,\n "g": 1\n }\n}'),states_test(["start","json","json","start"],'POST _search\n{\n  "something": """test script""",\n}')},3145:function(module,exports,__webpack_require__){"use strict";function tokensAsList(){var iter=new token_iterator.TokenIterator(output.getSession(),0,0),ret=[],t=iter.getCurrentToken(),parser=new RowParser(output);for(parser.isEmptyToken(t)&&(t=parser.nextNonEmptyToken(iter));t;)ret.push({value:t.value,type:t.type}),t=parser.nextNonEmptyToken(iter);return ret}function token_test(token_list,data){data&&"string"!=typeof data&&(data=JSON.stringify(data,null,3)),asyncTest("Token test "+testCount++,function(){output.update(data,function(){for(var tokens=tokensAsList(),normTokenList=[],i=0;i<token_list.length;i++)normTokenList.push({type:token_list[i++],value:token_list[i]});deepEqual(tokens,normTokenList,"Doc:\n"+data),start()})})}var _output=__webpack_require__(532),ace=__webpack_require__(50),$=__webpack_require__(7),RowParser=__webpack_require__(957),output=void 0,token_iterator=ace.require("ace/token_iterator"),_window$QUnit=window.QUnit,_module=_window$QUnit.module,asyncTest=_window$QUnit.asyncTest,deepEqual=_window$QUnit.deepEqual,start=_window$QUnit.start;_module("Output Tokenization",{setup:function(){output=(0,_output.initializeOutput)($("#output")),output.$el.show()},teardown:function(){output.$el.hide()}});var testCount=0;token_test(["warning","#! warning","comment","# GET url","paren.lparen","{","paren.rparen","}"],"#! warning\n# GET url\n{}"),token_test(["comment","# GET url","paren.lparen","{","variable",'"f"',"punctuation.colon",":","punctuation.start_triple_quote",'"""',"multi_string","raw","punctuation.end_triple_quote",'"""',"paren.rparen","}"],'# GET url\n{ "f": """raw""" }')},3146:function(module,exports,__webpack_require__){"use strict";function process_context_test(data,mapping,kb_schemes,request_line,test){asyncTest(test.name,function(){console.debug("starting test "+test.name);var rowOffset=0,editorValue=data;null!=request_line&&(null!=data?(editorValue=request_line+"\n"+data,rowOffset=1):editorValue=request_line),test.cursor.row+=rowOffset,mappings.clear(),mappings.loadMappings(mapping);var json={};json[test.name]=kb_schemes||{};var test_api=kb._test.loadApisFromJson(json);kb.setActiveApi(test_api),input.update(editorValue,function(){input.moveCursorTo(test.cursor.row,test.cursor.column),setTimeout(function(){input.completer={base:{},changeListener:function(){}},input.autocomplete._test.getCompletions(input,input.getSession(),test.cursor,"",function(err,terms){function ac(prop,prop_test){void 0!==test[prop]&&(prop_test?prop_test(context[prop],test[prop],prop):deepEqual(context[prop],test[prop],"context."+prop+" should equal "+JSON.stringify(test[prop])))}function pos_compare(actual,expected,name){equal(actual.row,expected.row+rowOffset,"row of "+name+" position is not as expected"),equal(actual.column,expected.column,"column of "+name+" position is not as expected")}function range_compare(actual,expected,name){pos_compare(actual.start,expected.start,name+".start"),pos_compare(actual.end,expected.end,name+".end")}if(test.assertThrows)return ok(test.assertThrows.test(""+err),"failed to throw expected exception"),void start();if(err)throw err;if(test.no_context?ok(!terms||0===terms.length,"Expected no context bug got terms."):ok(terms&&terms.length>0,"failed to extract terms ..."),!terms||0===terms.length)return void start();if(test.autoCompleteSet){var expected_terms=_lodash2.default.map(test.autoCompleteSet,function(t){return"object"!==(void 0===t?"undefined":_typeof(t))&&(t={name:t}),t});if(terms.length!=expected_terms.length)equal(_lodash2.default.pluck(terms,"name"),_lodash2.default.pluck(expected_terms,"name"),"list of completion terms is not of equal size");else{var filtered_actual_terms=_lodash2.default.map(terms,function(actual_term,i){var expected_term=expected_terms[i],filtered_term={};return _lodash2.default.each(expected_term,function(v,p){filtered_term[p]=actual_term[p]}),filtered_term});deepEqual(filtered_actual_terms,expected_terms)}}var context=terms[0].context;input.autocomplete._test.addReplacementInfoToContext(context,test.cursor,terms[0].value),ac("prefixToAdd"),ac("suffixToAdd"),ac("addTemplate"),ac("textBoxPosition",pos_compare),ac("rangeToReplace",range_compare),start()})})})})}function context_tests(data,mapping,kb_schemes,request_line,tests){null!=data&&"string"!=typeof data&&(data=JSON.stringify(data,null,3));for(var t=0;t<tests.length;t++)process_context_test(data,mapping,kb_schemes,request_line,tests[t])}function tt(term,template,meta){return term={name:term,template:template},meta&&(term.meta=meta),term}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_input=__webpack_require__(267),_lodash=__webpack_require__(0),_lodash2=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(_lodash),input=void 0,kb=__webpack_require__(529),mappings=__webpack_require__(265),$=__webpack_require__(7),_window$QUnit=window.QUnit,_module=_window$QUnit.module,ok=_window$QUnit.ok,asyncTest=_window$QUnit.asyncTest,deepEqual=_window$QUnit.deepEqual,equal=_window$QUnit.equal,start=_window$QUnit.start;_module("Integration",{setup:function(){input=(0,_input.initializeInput)($("#editor"),$("#editor_actions"),$("#copy_as_curl"),null),input.$el.show(),input.autocomplete._test.removeChangeListener()},teardown:function(){input.$el.hide(),input.autocomplete._test.addChangeListener()}});var SEARCH_KB={endpoints:{_search:{methods:["GET","POST"],patterns:["{indices}/{types}/_search","{indices}/_search","_search"],data_autocomplete_rules:{query:{match_all:{},term:{"{field}":{__template:{f:1}}}},size:{},facets:{__template:{FIELD:{}},"*":{terms:{field:"{field}"}}}}}}},MAPPING={index1:{"type1.1":{properties:{"field1.1.1":{type:"string"},"field1.1.2":{type:"string"}}}},index2:{"type2.1":{properties:{"field2.1.1":{type:"string"},"field2.1.2":{type:"string"}}}}};context_tests({},MAPPING,SEARCH_KB,"POST _search",[{name:"Empty doc",cursor:{row:0,column:1},initialValue:"",addTemplate:!0,prefixToAdd:"",suffixToAdd:"",rangeToReplace:{start:{row:0,column:1},end:{row:0,column:1}},autoCompleteSet:["facets","query","size"]}]),context_tests({},MAPPING,SEARCH_KB,"POST _no_context",[{name:"Missing KB",cursor:{row:0,column:1},no_context:!0}]),context_tests({query:{f:1}},MAPPING,{globals:{query:{t1:2}},endpoints:{}},"POST _no_context",[{name:"Missing KB - global auto complete",cursor:{row:2,column:5},autoCompleteSet:["t1"]}]),context_tests({query:{field:"something"},facets:{},size:20},MAPPING,SEARCH_KB,"POST _search",[{name:"existing dictionary key, no template",cursor:{row:1,column:6},initialValue:"query",addTemplate:!1,prefixToAdd:"",suffixToAdd:"",rangeToReplace:{start:{row:1,column:3},end:{row:1,column:10}},autoCompleteSet:["facets","query","size"]},{name:"existing inner dictionary key",cursor:{row:2,column:7},initialValue:"field",addTemplate:!1,prefixToAdd:"",suffixToAdd:"",rangeToReplace:{start:{row:2,column:6},end:{row:2,column:13}},autoCompleteSet:["match_all","term"]},{name:"existing dictionary key, yes template",cursor:{row:4,column:7},initialValue:"facets",addTemplate:!0,prefixToAdd:"",suffixToAdd:"",rangeToReplace:{start:{row:4,column:3},end:{row:4,column:15}},autoCompleteSet:["facets","query","size"]},{name:"ignoring meta keys",cursor:{row:4,column:14},no_context:!0}]),context_tests('{\n   "query": {\n    "field": "something"\n   },\n   "facets": {},\n   "size": 20 \n}',MAPPING,SEARCH_KB,"POST _search",[{name:"trailing comma, end of line",cursor:{row:4,column:16},initialValue:"",addTemplate:!0,prefixToAdd:"",suffixToAdd:", ",rangeToReplace:{start:{row:4,column:16},end:{row:4,column:16}},autoCompleteSet:["facets","query","size"]},{name:"trailing comma, beginning of line",cursor:{row:5,column:1},initialValue:"",addTemplate:!0,prefixToAdd:"",suffixToAdd:", ",rangeToReplace:{start:{row:5,column:1},end:{row:5,column:1}},autoCompleteSet:["facets","query","size"]},{name:"prefix comma, beginning of line",cursor:{row:6,column:0},initialValue:"",addTemplate:!0,prefixToAdd:", ",suffixToAdd:"",rangeToReplace:{start:{row:6,column:0},end:{row:6,column:0}},autoCompleteSet:["facets","query","size"]},{name:"prefix comma, end of line",cursor:{row:5,column:14},initialValue:"",addTemplate:!0,prefixToAdd:", ",suffixToAdd:"",rangeToReplace:{start:{row:5,column:14},end:{row:5,column:14}},autoCompleteSet:["facets","query","size"]}]),context_tests({object:1,array:1,value_one_of:1,value:2,something_else:5},MAPPING,{endpoints:{_test:{patterns:["_test"],data_autocomplete_rules:{object:{bla:1},array:[1],value_one_of:{__one_of:[1,2]},value:3,"*":{__one_of:[4,5]}}}}},"GET _test",[{name:"not matching object when { is not opened",cursor:{row:1,column:12},initialValue:"",autoCompleteSet:["{"]},{name:"not matching array when [ is not opened",cursor:{row:2,column:12},initialValue:"",autoCompleteSet:["["]},{name:"matching value with one_of",cursor:{row:3,column:19},initialValue:"",autoCompleteSet:[1,2]},{name:"matching value",cursor:{row:4,column:12},initialValue:"",autoCompleteSet:[3]},{name:"matching any value with one_of",cursor:{row:5,column:21},initialValue:"",autoCompleteSet:[4,5]}]),context_tests({query:{field:"something"},facets:{name:{}},size:20},MAPPING,SEARCH_KB,"GET _search",[{name:"* matching everything",cursor:{row:5,column:15},initialValue:"",addTemplate:!0,prefixToAdd:"",suffixToAdd:"",rangeToReplace:{start:{row:5,column:15},end:{row:5,column:15}},autoCompleteSet:[{name:"terms",meta:"API"}]}]),context_tests({index:"123"},MAPPING,{endpoints:{_test:{patterns:["_test"],data_autocomplete_rules:{index:"{index}"}}}},"GET _test",[{name:"{index} matching",cursor:{row:1,column:15},autoCompleteSet:[{name:"index1",meta:"index"},{name:"index2",meta:"index"}]}]),context_tests({array:["a"],oneof:"1"},MAPPING,{endpoints:{_endpoint:{patterns:["_endpoint"],data_autocomplete_rules:{array:["a","b"],number:1,object:{},fixed:{__template:{a:1}},oneof:{__one_of:["o1","o2"]}}}}},"GET _endpoint",[{name:"Templates 1",cursor:{row:1,column:0},autoCompleteSet:[tt("array",[]),tt("fixed",{a:1}),tt("number",1),tt("object",{}),tt("oneof","o1")]},{name:"Templates - one off",cursor:{row:4,column:12},autoCompleteSet:[tt("o1"),tt("o2")]}]),context_tests({string:"value",context:{}},MAPPING,{endpoints:{_endpoint:{patterns:["_endpoint"],data_autocomplete_rules:{context:{__one_of:[{__condition:{lines_regex:"value"},match:{}},{__condition:{lines_regex:"other"},no_match:{}},{always:{}}]}}}}},"GET _endpoint",[{name:"Conditionals",cursor:{row:2,column:15},autoCompleteSet:[tt("always",{}),tt("match",{})]}]),context_tests({any_of_numbers:[1],any_of_obj:[{a:1}],any_of_mixed:[{a:1},2]},MAPPING,{endpoints:{_endpoint:{patterns:["_endpoint"],data_autocomplete_rules:{any_of_numbers:{__template:[1,2],__any_of:[1,2,3]},any_of_obj:{__template:[{c:1}],__any_of:[{a:1,b:2},{c:1}]},any_of_mixed:{__any_of:[{a:1},3]}}}}},"GET _endpoint",[{name:"Any of - templates",cursor:{row:1,column:0},autoCompleteSet:[tt("any_of_mixed",[]),tt("any_of_numbers",[1,2]),tt("any_of_obj",[{c:1}])]},{name:"Any of - numbers",cursor:{row:2,column:2},autoCompleteSet:[1,2,3]},{name:"Any of - object",cursor:{row:6,column:2},autoCompleteSet:[tt("a",1),tt("b",2),tt("c",1)]},{name:"Any of - mixed - obj",cursor:{row:11,column:2},autoCompleteSet:[tt("a",1)]},{name:"Any of - mixed - both",cursor:{row:13,column:2},autoCompleteSet:[tt("{"),tt(3)]}]),context_tests({},MAPPING,{endpoints:{_endpoint:{patterns:["_endpoint"],data_autocomplete_rules:{query:""}}}},"GET _endpoint",[{name:"Empty string as default",cursor:{row:0,column:1},autoCompleteSet:[tt("query","")]}]),context_tests({a:{b:{},c:{},d:{t1a:{}},e:{},f:[{}],g:{},h:{}}},MAPPING,{globals:{gtarget:{t1:2,t1a:{__scope_link:"."}}},endpoints:{_current:{patterns:["_current"],data_autocomplete_rules:{a:{b:{__scope_link:".a"},c:{__scope_link:"ext.target"},d:{__scope_link:"GLOBAL.gtarget"},e:{__scope_link:"ext"},f:[{__scope_link:"ext.target"}],g:{__scope_link:function(){return{a:1,b:2}}},h:{__scope_link:"GLOBAL.broken"}}}},ext:{patterns:["ext"],data_autocomplete_rules:{target:{t2:1}}}}},"GET _current",[{name:"Relative scope link test",cursor:{row:2,column:12},autoCompleteSet:[tt("b",{}),tt("c",{}),tt("d",{}),tt("e",{}),tt("f",[{}]),tt("g",{}),tt("h",{})]},{name:"External scope link test",cursor:{row:3,column:12},autoCompleteSet:[tt("t2",1)]},{name:"Global scope link test",cursor:{row:4,column:12},autoCompleteSet:[tt("t1",2),tt("t1a",{})]},{name:"Global scope link with an internal scope link",cursor:{row:5,column:17},autoCompleteSet:[tt("t1",2),tt("t1a",{})]},{name:"Entire endpoint scope link test",cursor:{row:7,column:12},autoCompleteSet:[tt("target",{})]},{name:"A scope link within an array",cursor:{row:9,column:10},autoCompleteSet:[tt("t2",1)]},{name:"A function based scope link",cursor:{row:11,column:12},autoCompleteSet:[tt("a",1),tt("b",2)]},{name:"A global scope link with wrong link",cursor:{row:12,column:12},assertThrows:/broken/}]),context_tests({},MAPPING,{globals:{gtarget:{t1:2}},endpoints:{_current:{patterns:["_current"],id:"GET _current",data_autocomplete_rules:{__scope_link:"GLOBAL.gtarget"}}}},"GET _current",[{name:"Top level scope link",cursor:{row:0,column:1},autoCompleteSet:[tt("t1",2)]}]),context_tests({a:{}},MAPPING,{endpoints:{_endpoint:{patterns:["_endpoint"],data_autocomplete_rules:{a:{},b:{}}}}},"GET _endpoint",[{name:"Path after empty object",cursor:{row:1,column:10},autoCompleteSet:["a","b"]}]),context_tests({"":{}},MAPPING,SEARCH_KB,"POST _search",[{name:"Replace an empty string",cursor:{row:1,column:4},rangeToReplace:{start:{row:1,column:3},end:{row:1,column:9}}}]),context_tests({a:[{c:{}}]},MAPPING,{endpoints:{_endpoint:{patterns:["_endpoint"],data_autocomplete_rules:{a:[{b:1}]}}}},"GET _endpoint",[{name:"List of objects - internal autocomplete",cursor:{row:3,column:10},autoCompleteSet:["b"]},{name:"List of objects - external template",cursor:{row:0,column:1},autoCompleteSet:[tt("a",[{}])]}]),context_tests({query:{term:{field:"something"}},facets:{test:{terms:{field:"test"}}},size:20},MAPPING,SEARCH_KB,"POST index1/_search",[{name:"Field completion as scope",cursor:{row:3,column:10},autoCompleteSet:[tt("field1.1.1",{f:1},"string"),tt("field1.1.2",{f:1},"string")]},{name:"Field completion as value",cursor:{row:9,column:23},autoCompleteSet:[{name:"field1.1.1",meta:"string"},{name:"field1.1.2",meta:"string"}]}]),context_tests("POST _search",MAPPING,SEARCH_KB,null,[{name:"initial doc start",cursor:{row:1,column:0},autoCompleteSet:["{"],prefixToAdd:"",suffixToAdd:""}]),context_tests('{\n   "query": {} \n}\n\n\n',MAPPING,SEARCH_KB,"POST _search",[{name:"Cursor rows after request end",cursor:{row:4,column:0},autoCompleteSet:["GET","PUT","POST","DELETE","HEAD"],prefixToAdd:"",suffixToAdd:" "},{name:"Cursor just after request end",cursor:{row:2,column:1},no_context:!0}]);var CLUSTER_KB={endpoints:{_search:{patterns:["_search","{indices}/{types}/_search","{indices}/_search"],url_params:{search_type:["count","query_then_fetch"],scroll:"10m"},data_autocomplete_rules:{}},"_cluster/stats":{patterns:["_cluster/stats"],indices_mode:"none",data_autocomplete_rules:{}},"_cluster/nodes/stats":{patterns:["_cluster/nodes/stats"],data_autocomplete_rules:{}}}};context_tests(null,MAPPING,CLUSTER_KB,"GET _cluster",[{name:"Endpoints with slashes - no slash",cursor:{row:0,column:8},autoCompleteSet:["_cluster/nodes/stats","_cluster/stats","_search","index1","index2"],prefixToAdd:"",suffixToAdd:""}]),context_tests(null,MAPPING,CLUSTER_KB,"GET _cluster/",[{name:"Endpoints with slashes - before slash",cursor:{row:0,column:7},autoCompleteSet:["_cluster/nodes/stats","_cluster/stats","_search","index1","index2"],prefixToAdd:"",suffixToAdd:""},{name:"Endpoints with slashes - on slash",cursor:{row:0,column:12},autoCompleteSet:["_cluster/nodes/stats","_cluster/stats","_search","index1","index2"],prefixToAdd:"",suffixToAdd:""},{name:"Endpoints with slashes - after slash",cursor:{row:0,column:13},autoCompleteSet:["nodes/stats","stats"],prefixToAdd:"",suffixToAdd:""}]),context_tests(null,MAPPING,CLUSTER_KB,"GET _cluster/no",[{name:"Endpoints with slashes - after slash",cursor:{row:0,column:14},autoCompleteSet:[{name:"nodes/stats",meta:"endpoint"},{name:"stats",meta:"endpoint"}],prefixToAdd:"",suffixToAdd:"",initialValue:"no"}]),context_tests(null,MAPPING,CLUSTER_KB,"GET _cluster/nodes/st",[{name:"Endpoints with two slashes",cursor:{row:0,column:20},autoCompleteSet:["stats"],prefixToAdd:"",suffixToAdd:"",initialValue:"st"}]),context_tests(null,MAPPING,CLUSTER_KB,"GET ",[{name:"Immediately after space + method",cursor:{row:0,column:4},autoCompleteSet:[{name:"_cluster/nodes/stats",meta:"endpoint"},{name:"_cluster/stats",meta:"endpoint"},{name:"_search",meta:"endpoint"},{name:"index1",meta:"index"},{name:"index2",meta:"index"}],prefixToAdd:"",suffixToAdd:"",initialValue:""}]),context_tests(null,MAPPING,CLUSTER_KB,"GET cl",[{name:"Endpoints by subpart",cursor:{row:0,column:6},autoCompleteSet:[{name:"_cluster/nodes/stats",meta:"endpoint"},{name:"_cluster/stats",meta:"endpoint"},{name:"_search",meta:"endpoint"},{name:"index1",meta:"index"},{name:"index2",meta:"index"}],prefixToAdd:"",suffixToAdd:"",initialValue:"cl"}]),context_tests(null,MAPPING,CLUSTER_KB,"POST cl",[{name:"Endpoints by subpart",cursor:{row:0,column:7},autoCompleteSet:[{name:"_cluster/nodes/stats",meta:"endpoint"},{name:"_cluster/stats",meta:"endpoint"},{name:"_search",meta:"endpoint"},{name:"index1",meta:"index"},{name:"index2",meta:"index"}],prefixToAdd:"",suffixToAdd:"",initialValue:"cl"}]),context_tests(null,MAPPING,CLUSTER_KB,"GET _search?",[{name:"Params just after ?",cursor:{row:0,column:12},autoCompleteSet:[{name:"filter_path",meta:"param",insert_value:"filter_path="},{name:"format",meta:"param",insert_value:"format="},{name:"pretty",meta:"flag"},{name:"scroll",meta:"param",insert_value:"scroll="},{name:"search_type",meta:"param",insert_value:"search_type="}],prefixToAdd:"",suffixToAdd:""}]),context_tests(null,MAPPING,CLUSTER_KB,"GET _search?format=",[{name:"Params values",cursor:{row:0,column:19},autoCompleteSet:[{name:"json",meta:"format"},{name:"yaml",meta:"format"}],prefixToAdd:"",suffixToAdd:""}]),context_tests(null,MAPPING,CLUSTER_KB,"GET _search?format=yaml&",[{name:"Params after amp",cursor:{row:0,column:24},autoCompleteSet:[{name:"filter_path",meta:"param",insert_value:"filter_path="},{name:"format",meta:"param",insert_value:"format="},{name:"pretty",meta:"flag"},{name:"scroll",meta:"param",insert_value:"scroll="},{name:"search_type",meta:"param",insert_value:"search_type="}],prefixToAdd:"",suffixToAdd:""}]),context_tests(null,MAPPING,CLUSTER_KB,"GET _search?format=yaml&search",[{name:"Params on existing param",cursor:{row:0,column:26},rangeToReplace:{start:{row:0,column:24},end:{row:0,column:30}},autoCompleteSet:[{name:"filter_path",meta:"param",insert_value:"filter_path="},{name:"format",meta:"param",insert_value:"format="},{name:"pretty",meta:"flag"},{name:"scroll",meta:"param",insert_value:"scroll="},{name:"search_type",meta:"param",insert_value:"search_type="}],prefixToAdd:"",suffixToAdd:""}]),context_tests(null,MAPPING,CLUSTER_KB,"GET _search?format=yaml&search_type=cou",[{name:"Params on existing value",cursor:{row:0,column:37},rangeToReplace:{start:{row:0,column:36},end:{row:0,column:39}},autoCompleteSet:[{name:"count",meta:"search_type"},{name:"query_then_fetch",meta:"search_type"}],prefixToAdd:"",suffixToAdd:""}]),context_tests(null,MAPPING,CLUSTER_KB,"GET _search?format=yaml&search_type=cou",[{name:"Params on just after = with existing value",cursor:{row:0,column:36},rangeToReplace:{start:{row:0,column:36},end:{row:0,column:36}},autoCompleteSet:[{name:"count",meta:"search_type"},{name:"query_then_fetch",meta:"search_type"}],prefixToAdd:"",suffixToAdd:""}]),context_tests({query:{field:"something"},facets:{},size:20},MAPPING,SEARCH_KB,"POST http://somehost/_search",[{name:"fullurl - existing dictionary key, no template",cursor:{row:1,column:6},initialValue:"query",addTemplate:!1,prefixToAdd:"",suffixToAdd:"",rangeToReplace:{start:{row:1,column:3},end:{row:1,column:10}},autoCompleteSet:["facets","query","size"]},{name:"fullurl - existing inner dictionary key",cursor:{row:2,column:7},initialValue:"field",addTemplate:!1,prefixToAdd:"",suffixToAdd:"",rangeToReplace:{start:{row:2,column:6},end:{row:2,column:13}},autoCompleteSet:["match_all","term"]},{name:"fullurl - existing dictionary key, yes template",cursor:{row:4,column:7},initialValue:"facets",addTemplate:!0,prefixToAdd:"",suffixToAdd:"",rangeToReplace:{start:{row:4,column:3},end:{row:4,column:15}},autoCompleteSet:["facets","query","size"]}])}},[3114]);